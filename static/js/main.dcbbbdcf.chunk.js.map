{"version":3,"sources":["services/createToken.tsx","services/getCurrentLocation.tsx","services/axios/index.tsx","services/mapbox/auxiliary/dataCleaner.ts","services/credentials.tsx","services/mapbox/directions.ts","components/Map/marker/index.tsx","context/theme.tsx","services/mapbox/interfaces.ts","components/Map/index.tsx","services/places.ts","components/Dashboard/ErrorNotification/index.tsx","components/Dashboard/ZoomButton/index.tsx","components/Dashboard/CustomInput/index.tsx","components/Dashboard/Navigation/NavigationDrawer/SignalGenerator/index.tsx","components/Dashboard/Navigation/NavigationBox/index.tsx","components/Dashboard/Navigation/NavigationDrawer/index.tsx","services/distanceBetweenPoint.ts","components/Dashboard/Navigation/index.tsx","components/Dashboard/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","context/appStyle.tsx","index.tsx"],"names":["useGetToken","jwt","app","name","date","Date","now","useGetCurrentLocation","options","useState","lat","lng","center","setCenter","error","setError","locationWatchId","useRef","handleSuccess","position","console","log","coords","latitude","toPrecision","longitude","accuracy","handleError","message","cancelLocationWatch","current","navigator","geolocation","clearWatch","useEffect","watchPosition","alert","instance","axios","create","baseURL","manageGeometry","data","coordinates","forEach","item","push","type","manageManeuver","bearing_after","bearing_before","location","instruction","modifier","manageSteps","response","driving_side","destinations","mode","duration","distance","maneuver","geometry","manageLegs","summary","steps","manageRoutes","legs","manageWaypoints","MAPBOX_TOKEN","process","REACT_APP_MAPBOX_TOKEN","validateCoordinates","flag","undefined","useDirection","target","departure","alternatives","profile","direction","setDirection","url","setUrl","setCoordinates","auxiliary","map","join","alignCoordinates","a","get","status","routes","waypoints","getDirections","MarkerComponent","icon","description","useMemo","Marker","Popup","memo","theme","createMuiTheme","palette","grayscale","dark","main","light","responsiveFontSizes","Profile","customStyles","makeStyles","mapStyle","width","height","customMarker","color","warning","top","left","navigationIcon","margin","dashboardStyle","boxShadow","background","opacity","borderRadius","padding","zIndex","MapComponent","places","zoom","customStyle","useTheme","mapRef","centerIcon","L","divIcon","html","renderToStaticMarkup","PersonPinCircle","className","style","primary","popupAnchor","optionIcon","LocationOn","setView","MapContainer","zoomAnimation","scrollWheelZoom","zoomControl","whenCreated","TileLayer","attribution","id","accessToken","tileSize","zoomOffset","index","coordinate","length","Polyline","pathOptions","weight","positions","ErrorNotification","styled","div","Alert","severity","AlertTitle","Cover","ZoomButton","currentZoom","onChangeZoom","Add","onClick","Remove","CI","TextField","CustomInput","onSetTarget","display","flexDirection","label","variant","Button","startIcon","ArrowForwardIos","minWidth","event","preventDefault","document","getElementById","value","SignalGenerator","iconCssClass","PlaceOutlined","fontSize","PinDropOutlined","SubdirectoryArrowLeftOutlined","transform","SubdirectoryArrowRightOutlined","PanToolOutlined","CallMadeOutlined","AutorenewOutlined","SyncOutlined","CallMergeOutlined","Help","NavigationBox","navigation","onClickBox","justifyContent","alignItems","ArrowBackIos","Typography","destination","handleStepString","CircularProgress","disableShrink","size","NavigationDrawer","open","onDrawerClose","route","step","Drawer","anchor","onClose","List","ListItem","ListItemAvatar","Avatar","backgroundColor","ListItemText","secondary","toRad","Math","PI","distanceBetweenPoint","lat1","lon1","lat2","lon2","dLat","dLon","radLat1","radLat2","sin","cos","atan2","sqrt","NavigationComponent","currentStep","setCurrentStep","setNavigation","drawerFlag","setDrawerFlag","useCallback","parseInt","toFixed","Dashboard","listPlaces","setTarget","setZoom","driving","enableHighAccuracy","timeout","maximumAge","param","setTimeout","Navigation","Map","App","setToken","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppStyle","createGlobalStyle","ReactDOM","render","StrictMode","ThemeProvider","serviceWorker","ready","registration","unregister","catch"],"mappings":"yXAKeA,EAFK,kBAAMC,OAAS,CAAEC,IAAK,WAAYC,KAAK,eAAgBC,KAAKC,KAAKC,OAAS,yBCwC/EC,EAxCe,WAA2B,IAA1BC,EAAyB,uDAAP,GAAO,EAExBC,mBAAwB,CAACC,IAAK,EAAGC,IAAK,IAFd,mBAE7CC,EAF6C,KAErCC,EAFqC,OAG1BJ,qBAH0B,mBAG7CK,EAH6C,KAGtCC,EAHsC,KAI9CC,EAA8DC,mBAE9DC,EAAgB,SAACC,GACnBC,QAAQC,IAAI,aAAeF,EAASG,OAAOC,SAASC,YAAY,IAC5D,eAAiBL,EAASG,OAAOG,UAAUD,YAAY,IACvD,cAAgBL,EAASG,OAAOI,UAGpCb,EAAU,CACNH,IAAKS,EAASG,OAAOC,SACrBZ,IAAKQ,EAASG,OAAOG,aAIvBE,EAAc,SAACb,GACjBC,EAASD,EAAMc,UAGbC,EAAsB,WACpBb,EAAgBc,SAAWC,UAAUC,aACrCD,UAAUC,YAAYC,WAAWjB,EAAgBc,UAazD,OATAI,qBAAU,WAMN,OALIH,UAAUC,YACVhB,EAAgBc,QAAUC,UAAUC,YAAYG,cAAcjB,EAAeS,EAAanB,GAE1F4B,MAAM,gCAEHP,IACR,CAACrB,IAEG,CAACI,SAAQiB,sBAAqBf,U,6CClC1BuB,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,iDCAPC,EAAiB,SAACC,GACpB,IAAIC,EAAkC,GAMtC,OAJAD,EAAKC,YAAYC,SAAQ,SAAAC,GACrBF,EAAYG,KAAK,CAACD,EAAK,GAAIA,EAAK,QAG7B,CACHE,KAAML,EAAKK,KACXJ,YAAaA,IAIfK,EAAiB,SAACN,GACpB,MAAO,CACHO,cAAeP,EAAKO,cACpBC,eAAgBR,EAAKQ,eACrBC,SAAU,CAACT,EAAKS,SAAS,GAAIT,EAAKS,SAAS,IAC3CC,YAAaV,EAAKU,YAClBL,KAAML,EAAKK,KACXM,SAASX,EAAKW,WAIhBC,EAAc,SAACZ,GACjB,IAAIa,EAAwB,GAc5B,OAZAb,EAAKE,SAAQ,SAACC,GACVU,EAAST,KAAK,CACVU,aAAcX,EAAKW,aACnBC,aAAcZ,EAAKY,aACnBC,KAAMb,EAAKa,KACXC,SAAUd,EAAKc,SACfxD,KAAM0C,EAAK1C,KACXyD,SAAUf,EAAKe,SACfC,SAAUb,EAAeH,EAAKgB,UAC9BC,SAAUrB,EAAeI,EAAKiB,eAG/BP,GAGLQ,EAAa,SAACrB,GAChB,IAAIa,EAAwB,GAS5B,OARAb,EAAKE,SAAQ,SAACC,GACVU,EAAST,KAAK,CACVkB,QAASnB,EAAKmB,QACdJ,SAAUf,EAAKe,SACfD,SAAUd,EAAKe,SACfK,MAAOX,EAAYT,EAAKoB,YAGzBV,GAILW,EAAe,SAACxB,GAClB,IAAIa,EAAyB,GAW7B,OATAb,EAAKE,SAAQ,SAACC,GACVU,EAAST,KAAK,CACVa,SAAUd,EAAKc,SACfC,SAAUf,EAAKe,SACfO,KAAMJ,EAAWlB,EAAKsB,MACtBL,SAAUrB,EAAeI,EAAKiB,eAI/BP,GAGLa,EAAkB,SAAC1B,GACrB,IAAIa,EAA6B,GAUjC,OARAb,EAAKE,SAAQ,SAAAC,GACTU,EAAST,KAAK,CACVc,SAAUf,EAAKe,SACfT,SAAU,CAACN,EAAKM,SAAS,GAAIN,EAAKM,SAAS,IAC3ChD,KAAM0C,EAAK1C,UAIZoD,GCrFEc,EAAeC,mJAAYC,uBCqBlCC,EAAsB,SAAtBA,EAAuB7B,GACzB,IAdqBD,EAcjB+B,GAAe,EAEnB,QAduCC,KAFlBhC,EAgBDC,GAdWjC,UAAqDgE,IAA/BhC,EAAuB/B,IAexE8D,EAA2B,IAApB9B,EAAYhC,KAAiC,IAApBgC,EAAYjC,QAG3C,CAAC,IAAD,gBACgBiC,GADhB,IACD,2BAA8B,CAC1B8B,EAAOD,EADmB,UAD7B,+BAML,OAAOC,GA4CIE,EAzCM,SAAC,GAAoE,IAAnEC,EAAkE,EAAlEA,OAAOC,EAA2D,EAA3DA,UAAUC,EAAiD,EAAjDA,aAAab,EAAoC,EAApCA,MAAMc,EAA8B,EAA9BA,QAA8B,EACnDtE,qBADmD,mBAC9EuE,EAD8E,KACnEC,EADmE,OAE/DxE,qBAF+D,mBAE9EyE,EAF8E,KAEzEC,EAFyE,OAKjD1E,qBALiD,mBAKhFkC,EALgF,KAKnEyC,EALmE,KAsCrF,OA/BAlD,qBAAU,WACN,GAAIsC,EAAoBK,IAAcL,EAAoBI,GAAQ,CAC9D,IAAIS,EAjCS,SAACR,EAA0BD,GAChD,IAAIjC,EAA6B,CAAC,GAAD,OAAIkC,EAAUlE,IAAd,cAAuBkE,EAAUnE,MAGlE,OADAkE,EAAOU,KAAI,SAACzC,GAAD,OAAUF,EAAYG,KAAZ,UAAoBD,EAAKlC,IAAzB,cAAkCkC,EAAKnC,SACrDiC,EAAY4C,KAAK,OA6BAC,CAAiBX,EAAWD,GAC5CQ,EAAeC,MAErB,CAACR,EAAWD,IAEd1C,qBAAU,WACFS,GACAwC,EAAO,GAAD,OAAIJ,EAAJ,YAAepC,EAAf,yBAA2CmC,EAA3C,qCAAoFb,EAApF,4DAA6II,MAExJ,CAAC1B,EAAamC,EAAcC,EAASd,IAExC/B,qBAAU,WAcFgD,GAbe,uCAAG,gCAAAO,EAAA,+EAEenD,EAAMoD,IAAeR,GAFpC,gBAEPxC,EAFO,EAEPA,MAAMiD,EAFC,EAEDA,SACY,MAAXA,GACVV,EAAa,CACTW,OAAQ1B,EAAaxB,EAAKkD,QAC1BC,UAAWzB,EAAgB1B,EAAKmD,aAN1B,gDAUdzE,QAAQC,IAAR,MAVc,yDAAH,oDAcfyE,KAEL,CAACZ,IACGF,G,wGC/DLe,EAAmC,SAAC,GAAyC,IAAxC5E,EAAuC,EAAvCA,SAAU6E,EAA6B,EAA7BA,KAAM7F,EAAuB,EAAvBA,KAAM8F,EAAiB,EAAjBA,YAC7D,OAAOC,mBAAQ,kBACX,cAACC,EAAA,EAAD,CAAQhF,SAAUA,EAAU6E,KAAMA,EAAlC,SACI,cAACI,EAAA,EAAD,UACI,gCACKjG,GAAQ,uBADb,IACqC,uBADrC,IAC4C8F,GAAe,sBAD3D,aAKV,CAACA,EAAaD,EAAM7F,EAAMgB,KAGjBkF,iBAAKN,G,mCCWpB,IAbuBvF,EAanB8F,GAbmB9F,EAaG,GAZf+F,YAAe,aAClBC,QAAS,CACLC,UAAW,CACPC,KAAM,UACNC,KAAM,UACNC,MAAO,aAGZpG,KAMX8F,EAAQO,YAAoBP,GAE5B,ICrCYQ,EDqCNC,EAAeC,YAAW,CAC5BC,SAAU,CACNC,MAAO,OACPC,OAAQ,QACRhG,SAAU,YAEdiG,aAAc,CACVjG,SAAU,WACVkG,MAAOf,EAAME,QAAQc,QAAQX,KAC7BY,IAAK,QACLC,KAAM,QACNN,MAAO,SACPC,OAAQ,UAEZM,eAAgB,CACZC,OAAO,YAEXC,eAAgB,CACZC,UAAU,iBAAD,OAAmBtB,EAAME,QAAQC,UAAUE,MACpDU,MAAOf,EAAME,QAAQC,UAAUG,MAC/BiB,WAAYvB,EAAME,QAAQC,UAAUC,KACpCoB,QAAS,MACTC,aAAc,MACdC,QAAS,SACTC,OAAQ,IACR9G,SAAU,cEpDZ+G,EAA6B,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,KAAMxH,EAAuB,EAAvBA,OAAQoE,EAAe,EAAfA,UACjDqD,EAActB,IACbP,EAAW8B,cAAX9B,QACD+B,EAAStH,mBAETuH,EAAatC,mBAAQ,kBAAMuC,IAAEC,QAAQ,CACvCC,KAAMC,+BACF,cAACC,EAAA,EAAD,CAAiBC,UAAWT,EAAYjB,aAAc2B,MAAO,CAAC1B,MAAOb,EAAQwC,QAAQrC,SACzFsC,YAAa,CAAC,GAAI,QAClB,CAACZ,EAAYjB,aAAcZ,EAAQwC,QAAQrC,OAEzCuC,EAAahD,mBAAQ,kBAAMuC,IAAEC,QAAQ,CACvCC,KAAMC,+BAAqB,cAACO,EAAA,EAAD,CAAYL,UAAWT,EAAYjB,gBAC9D6B,YAAa,CAAC,GAAI,QAClB,CAACZ,EAAYjB,eAUjB,OANAlF,qBAAU,WACFqG,EAAOzG,SACPyG,EAAOzG,QAAQsH,QAAQxI,EAAQwH,KAEpC,CAACxH,EAAQwH,IAEL,qBAAKU,UAAWT,EAAYpB,SAAU8B,MAAO,CAACrB,OAAQ,QAAtD,SACH,eAAC2B,EAAA,EAAD,CAAcjB,KAAMA,EAAMU,UAAWT,EAAYpB,SAAUqC,eAAe,EAAMC,iBAAiB,EACnFC,aAAa,EACbC,YAXS,SAACnE,GAAD,OAAgBiD,EAAOzG,QAAUwD,GASxD,UAGI,cAACoE,EAAA,EAAD,CACIC,YAAY,4JACZzE,IAAI,qFACJ0E,GAAI,qBACJC,YAAaxF,EACbyF,SAAU,IACVC,YAAa,IAGbnJ,GAAU,cAAC,EAAD,CAAiBO,SAAUP,EAAQoF,KAAMwC,IAGnDL,GAAUA,EAAO7C,KAAI,SAACzC,EAAWmH,GAC7B,OAAO,cAAC,EAAD,CAAiB7I,SAAU0B,EAAKoH,WAAwBjE,KAAMkD,GAAbc,MAI5DhF,GAAaA,EAAUkF,OAAS,GAAK,cAACC,EAAA,EAAD,CAAUC,YAAa,CAAC/C,MAAOb,EAAQ1F,MAAM6F,KAAM0D,OAAQ,GACjDC,UAAWtF,UAM3DqB,iBAAK6B,GC9DPC,EAAwB,CACjC,CACI8B,WAAY,CACRvJ,IAAI,mBACJC,KAAK,mBAETR,KAAM,wCAEV,CACI8J,WAAY,CACRvJ,IAAK,mBACLC,KAAM,kBAEVR,KAAM,mBAEV,CACI8J,WAAY,CACRvJ,IAAK,mBACLC,KAAM,mBAEVR,KAAM,wBAEV,CACI8J,WAAY,CACRvJ,IAAK,mBACLC,KAAM,mBAEVR,KAAM,2BAEV,CACI8J,WAAY,CACRvJ,IAAK,mBACLC,KAAM,kBAEVR,KAAM,0BAEV,CACI8J,WAAY,CACRvJ,IAAK,mBACLC,KAAM,mBAEVR,KAAM,wBAEV,CACI8J,WAAY,CACRvJ,IAAK,kBACLC,KAAM,kBAEVR,KAAM,iDAEV,CACI8J,WAAY,CACRvJ,IAAK,kBACLC,KAAM,mBAEVR,KAAM,yB,SFvDF2G,K,kBAAAA,E,kBAAAA,E,kBAAAA,E,kCAAAA,M,2DGkBNyD,IAZQC,KAAOC,IAAV,gOACK,qBAAEnE,MAAiBE,QAAQc,QAAQX,QAWG,SAAC,GAAa,IAAZ7F,EAAW,EAAXA,MACtCwH,cAOd,OAAO,eAACoC,GAAA,EAAD,CAAOC,SAAS,UAAU5B,MAAO,CAAC5H,SAAU,WAAY8G,OAAQ,IAAKV,IAAK,OAAQC,KAAM,QAAxF,UACH,cAACoD,GAAA,EAAD,sBACC9J,EAFE,WAEO,0HAIHuF,kBAAKkE,I,oBC5BdM,GAAQL,KAAOC,IAAV,gPAaLK,GAAkC,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC5CrD,EAAkBZ,IAAlBY,eAEP,OAAO,eAAC,GAAD,CAAOmB,UAAWnB,EAAlB,UACH,cAACsD,GAAA,EAAD,CAAKC,QAAS,kBAAMH,EAAc,IAAMC,IAAeD,MACvD,cAACI,GAAA,EAAD,CAAQD,QAAS,kBAAMH,EAAc,IAAMC,IAAeD,UAInD1E,kBAAKyE,I,8BCrBdD,GAAQL,KAAOC,IAAV,yYAcE,qBAAEnE,MAAiBE,QAAQC,UAAUC,QASrC,qBAAEJ,MAAiBE,QAAQc,QAAQX,QAI1CyE,GAAKZ,aAAOa,KAAPb,CAAH,uEAKFc,GAAqC,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAClC5D,EAAkBZ,IAAlBY,eACDrB,EAAQgC,cAad,OAAO,eAAC,GAAD,CAAOhC,MAAOA,EAAd,UACH,sBAAKyC,MAAO,CAACyC,QAAS,OAAQC,cAAe,UAA7C,UACI,cAACL,GAAD,CAAIxB,GAAI,MAAO8B,MAAM,WAAWC,QAAQ,WACxC,cAACP,GAAD,CAAIxB,GAAI,MAAO8B,MAAM,YAAYC,QAAQ,cAE7C,cAACC,GAAA,EAAD,CAAQD,QAAQ,YAAYtE,MAAM,UAAUwE,UAAW,cAACC,GAAA,EAAD,IAAoBhD,UAAWnB,EAC9EoB,MAAO,CACH1B,MAAOf,EAAME,QAAQC,UAAUG,MAC/BiB,WAAYvB,EAAME,QAAQC,UAAUC,KACpCoB,QAAS,MACTC,aAAc,MACdC,QAAS,SACTb,OAAQ,QACRO,OAAQ,kBACRqE,SAAU,OACV5K,SAAS,YAEb+J,QA5Ba,SAACc,GACtBA,EAAMC,iBAEN,IAAIvL,EAAMwL,SAASC,eAAe,OAAOC,MAErCzL,EAAMuL,SAASC,eAAe,OAAOC,MAEzCb,EAAY,CAAC7K,IAAKA,EAAKC,IAAKA,WA0BrB0F,kBAAKiF,I,iIC4BLe,GAzFS,SAAC,GAAyD,IAAxDtJ,EAAuD,EAAvDA,KAAMM,EAAiD,EAAjDA,SAAUiJ,EAAuC,EAAvCA,aAEtC,GAAa,WAATvJ,EAEA,OAAO,cAACwJ,GAAA,EAAD,CAAezD,UAAWwD,EAAcE,SAAS,UAIvD,GAAa,WAATzJ,EACL,OAAO,cAAC0J,GAAA,EAAD,CAAiB3D,UAAWwD,EAAcE,SAAS,UAEzD,GAAa,gBAATzJ,EACL,MAAiB,SAAbM,EACO,cAACqJ,GAAA,EAAD,CAA+B5D,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAElG,UAAbnJ,EACO,cAACuJ,GAAA,EAAD,CAAgC9D,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAE7G,cAACK,GAAA,EAAD,CAAiB/D,UAAWwD,EAAcE,SAAS,UAEzD,GAAa,YAATzJ,EACL,MAAiB,SAAbM,EACO,cAACqJ,GAAA,EAAD,CAA+B5D,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAElG,UAAbnJ,EACO,cAACuJ,GAAA,EAAD,CAAgC9D,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAEnG,iBAAbnJ,EACO,cAACyJ,GAAA,EAAD,CAAkBhE,UAAWwD,EAAcE,SAAS,UAGpD,cAACM,GAAA,EAAD,CAAkBhE,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAGrG,GAAa,SAATzJ,EACL,MAAiB,UAAbM,EACO,cAACuJ,GAAA,EAAD,CAAgC9D,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAEnG,iBAAbnJ,EACO,cAACyJ,GAAA,EAAD,CAAkBhE,UAAWwD,EAAcE,SAAS,UAE9C,SAAbnJ,EACO,cAACqJ,GAAA,EAAD,CAA+B5D,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAGxG,cAACM,GAAA,EAAD,CAAkBhE,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAGrG,GAAa,aAATzJ,EACL,MAAiB,iBAAbM,EACO,cAACyJ,GAAA,EAAD,CAAkBhE,UAAWwD,EAAcE,SAAS,UAGpD,cAACM,GAAA,EAAD,CAAkBhE,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAGrG,GAAa,SAATzJ,EACL,MAAiB,iBAAbM,EACO,cAACyJ,GAAA,EAAD,CAAkBhE,UAAWwD,EAAcE,SAAS,UAGpD,cAACM,GAAA,EAAD,CAAkBhE,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAGrG,GAAa,eAATzJ,EAAuB,CAC5B,GAAiB,iBAAbM,GAA4C,UAAbA,EAC/B,OAAO,cAAC0J,GAAA,EAAD,CAAmBjE,UAAWwD,EAAcE,SAAS,UAEhE,GAAiB,gBAAbnJ,GAA2C,SAAbA,EAC9B,OAAO,cAAC2J,GAAA,EAAD,CAAclE,UAAWwD,EAAcE,SAAS,UAG3D,GAAiB,aAAbnJ,EACA,OAAO,cAAC4J,GAAA,EAAD,CAAmBnE,UAAWwD,EAAcE,SAAS,cAG/D,IAAY,aAATzJ,EASJ,OAAO,cAACmK,GAAA,EAAD,CAAMpE,UAAWwD,EAAcE,SAAS,UAR/C,GAAiB,SAAbnJ,EACA,OAAO,cAACqJ,GAAA,EAAD,CAA+B5D,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,UAEnH,GAAiB,UAAbnJ,EACA,OAAO,cAACuJ,GAAA,EAAD,CAAgC9D,UAAWwD,EAAcvD,MAAO,CAAC4D,UAAW,mBAAoBH,SAAS,YCvFtH3B,GAAQL,KAAOC,IAAV,kPAaL0C,GAAoC,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WAC9C/G,EAAQgC,cADsD,EAE3BvB,IAAlCU,EAF6D,EAE7DA,eAAgBE,EAF6C,EAE7CA,eAgBvB,OAAO,cAAC,GAAD,CAAOrB,MAAOA,EAAOwC,UAAWnB,EAAgBuD,QAASmC,EAAzD,SAECD,EAAa,sBAAKrE,MAAO,CACjByC,QAAS,OACTC,cAAe,MACf6B,eAAgB,gBAChBC,WAAY,SACZrG,MAAO,QALF,UAOL,cAACsG,GAAA,EAAD,CAAchB,SAAU,QAASzD,MAAO,CAACrB,OAAQ,cACjD,gCACI,cAAC+F,GAAA,EAAD,CAAY9B,QAAS,QAArB,SAA+ByB,EAAWhK,cAE1C,cAACqK,GAAA,EAAD,CAAY9B,QAAS,UAAW5C,MAAO,CAAC1B,MAAOf,EAAME,QAAQC,UAAUE,MAAvE,SAxBK,SAACxG,EAAeuN,GACrC,IAAItB,EAAuB,GAO3B,OANIjM,GACAiM,EAAMtJ,KAAK3C,GAEXuN,GACAtB,EAAMtJ,KAAK4K,GAERtB,EAAM7G,KAAK,MAiBEoI,CAAiBP,EAAWjN,KAAMiN,EAAWM,kBAIjDrB,GAAgB,CACZtJ,KAAMqK,EAAWrK,KACjBM,SAAU+J,EAAW/J,SACrBiJ,aAAc7E,OAIxB,cAACmG,GAAA,EAAD,CAAkBC,eAAa,EAAC9E,MAAO,CAAC1B,MAAO,SAAUyG,KAAM,QAKlEzH,kBAAK8G,I,4DC7DdY,GAA+C,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,MACjEzG,EAAkBV,IAAlBU,eAEDkG,EAAmB,SAACQ,GACtB,IAAI/B,EAAuB,GAO3B,OANI+B,EAAKhO,MACLiM,EAAMtJ,KAAKqL,EAAKhO,MAEhBgO,EAAK1K,cACL2I,EAAMtJ,KAAKqL,EAAK1K,cAEb2I,EAAM7G,KAAK,OAGtB,OAAO,cAAC6I,GAAA,EAAD,CAAQC,OAAQ,QAASL,KAAMA,EAAMM,QAASL,EAA9C,SACH,cAACM,GAAA,EAAD,UAEQL,GAASA,EAAM/J,KAAK,GAAGF,MAAMqB,KAAI,SAAC6I,EAAMnE,GACpC,OAAO,eAACwE,GAAA,EAAD,CAAsBjB,WAAW,aAAjC,UACC,cAACkB,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAQ3F,MAAO,CAAC4F,gBAAiB,eAAjC,SAEQtC,GAAgB,CACZtJ,KAAMoL,EAAKtK,SAASd,KACpBM,SAAU8K,EAAKtK,SAASR,SACxBiJ,aAAc7E,QAK9B,cAACmH,GAAA,EAAD,CAAc5F,QAASmF,EAAKtK,SAAST,YAAayL,UAAWlB,EAAiBQ,OAZhEnE,WAoB3B3D,kBAAK0H,IC7CpB,SAASe,GAAM1C,GAEX,OAAOA,EAAQ2C,KAAKC,GAAK,IAqBdC,OAhBf,SAA8BC,EAAaC,EAAaC,EAAaC,GAEjE,IACIC,EAAOR,GAAMM,EAAKF,GAClBK,EAAOT,GAAMO,EAAKF,GAClBK,EAAUV,GAAMI,GAChBO,EAAUX,GAAMM,GAEhB3J,EAAIsJ,KAAKW,IAAIJ,EAAK,GAAKP,KAAKW,IAAIJ,EAAK,GACrCP,KAAKW,IAAIH,EAAK,GAAKR,KAAKW,IAAIH,EAAK,GAAKR,KAAKY,IAAIH,GAAWT,KAAKY,IAAIF,GAEvE,OATQ,MAQA,EAAIV,KAAKa,MAAMb,KAAKc,KAAKpK,GAAIsJ,KAAKc,KAAK,EAAEpK,KACjC,KCZdqK,GAAmD,SAAC,GAA2B,IAA1B9K,EAAyB,EAAzBA,UAAW7B,EAAc,EAAdA,SAAc,EAC1C1C,qBAD0C,mBACzEsP,EADyE,KAC5DC,EAD4D,OAG5CvP,qBAH4C,mBAGzE2M,EAHyE,KAG7D6C,EAH6D,OAK5CxP,oBAAkB,GAL0B,mBAKzEyP,EALyE,KAK7DC,EAL6D,KAO1E9C,EAAa+C,uBAAY,WAC3BD,GAAeD,KAChB,CAACA,IA4BJ,OA1BAhO,qBAAU,WAEG,OAAT8C,QAAS,IAATA,KAAWY,OAAO,GAAGzB,KAAK,GAAGF,MAAMrB,SAAQ,SAACuL,EAAKnE,GAC7C,IAAIpG,EAAW,EACfuK,EAAKrK,SAASnB,YAAYC,SAAQ,SAACqH,GAC/BrG,EAAWqL,GAAqB9L,EAASzC,IAAKyC,EAASxC,IAAKsJ,EAAW,GAAIA,EAAW,IACtF7I,QAAQC,IAAI,mCAAmCgP,SAASzM,EAAS0M,QAAQ,KACtED,SAASzM,EAAS0M,QAAQ,IAAM,IAC/BN,EAAehG,WAI7B,QAAChF,QAAD,IAACA,OAAD,EAACA,EAAWY,OAAQzC,EAASzC,IAAKyC,EAASxC,MAE7CuB,qBAAU,gBACcwC,IAAhBqL,GACAE,EAAc,CACVlN,KAAI,OAAEiC,QAAF,IAAEA,OAAF,EAAEA,EAAWY,OAAO,GAAGzB,KAAK,GAAGF,MAAM8L,GAAalM,SAASd,KAC/DM,SAAQ,OAAE2B,QAAF,IAAEA,OAAF,EAAEA,EAAWY,OAAO,GAAGzB,KAAK,GAAGF,MAAM8L,GAAalM,SAASR,SACnED,YAAW,OAAE4B,QAAF,IAAEA,OAAF,EAAEA,EAAWY,OAAO,GAAGzB,KAAK,GAAGF,MAAM8L,GAAalM,SAAST,YACtEjD,KAAI,OAAE6E,QAAF,IAAEA,OAAF,EAAEA,EAAWY,OAAO,GAAGzB,KAAK,GAAGF,MAAM8L,GAAa5P,KACtDuN,YAAW,OAAE1I,QAAF,IAAEA,OAAF,EAAEA,EAAWY,OAAO,GAAGzB,KAAK,GAAGF,MAAM8L,GAAatM,iBAGvE,CAACsM,EAAD,OAAc/K,QAAd,IAAcA,OAAd,EAAcA,EAAWY,SAEpB,qCAECwH,GAAc,cAAC,GAAD,CAAeA,WAAYA,EAAYC,WAAYA,IAErE,cAAC,GAAD,CAAkBW,KAAMkC,EAAYjC,cAAeZ,EAAYa,MAAK,OAAElJ,QAAF,IAAEA,OAAF,EAAEA,EAAWY,OAAO,SAIjFS,kBAAKyJ,IC4BLS,GApEG,WAAM,MAGQ9P,mBAAuB+P,GAH/B,mBAGbrI,EAHa,aAKQ1H,mBAA+B,CAAC,CAACC,IAAK,kBAAmBC,KAAM,qBALvE,mBAKbiE,EALa,KAKL6L,EALK,OAOIhQ,mBAAS,IAPb,mBAOb2H,EAPa,KAOPsI,EAPO,OASUjQ,mBAASqG,EAAQ6J,SAT3B,mBASb5L,EATa,aAkByBxE,EAL7B,CACZqQ,oBAAoB,EACpBC,QAAS,IACTC,WAAY,SAETlQ,EAlBa,EAkBbA,OAAQiB,EAlBK,EAkBLA,oBAAqBf,EAlBhB,EAkBgBA,MAE9BkE,EAAYL,EAAa,CAC3BI,QAASA,EACTF,UAAWjE,EACXgE,OAAQA,EACRX,OAAO,EACPa,cAAc,IAGZkG,EAAeoF,uBAAY,SAAChE,GAC9BhL,QAAQC,IAAI+K,GACZsE,EAAQtE,KACT,IAGGb,EAAc6E,uBAAY,SAAChE,GAC7B,IAAI2E,EAA8B,GAC9B3E,EAAM1L,KAAO0L,EAAMzL,MACnBoQ,EAAMjO,KAAKsJ,GACXqE,EAAUM,MAEf,IAWH,OATA7O,qBAAU,YACDtB,EAAOF,KAAQE,EAAOD,MAE3BqQ,YAAW,WACPnP,MACD,OAEJ,CAACjB,EAAQiB,EAAqBf,IAE1B,qCACH,cAACmQ,GAAD,CAAqBjM,UAAWA,EAAW7B,SAAUvC,IAErD,cAACsQ,EAAD,CAAc/I,OAAQA,EAAQC,KAAMA,EAAMxH,OAAQA,EACpCoE,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWY,OAAO,GAAG9B,SAASnB,cAEvD,cAAC,GAAD,CAAYoI,YAAa3C,EAAM4C,aAAcA,IAGzClK,GAAS,cAAC,GAAD,CAAmBA,MAAOA,IAIvC,cAAC,GAAD,CAAayK,YAAaA,QCxDnB4F,OAjBf,WAAgB,IAAD,EACe1Q,mBAAiB,IADhC,mBACG2Q,GADH,WAOX,OAJAlP,qBAAU,WACNkP,EAASpR,KACV,IAGC,qBAAK8I,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SAEI,cAAC,GAAD,SCHIuI,QACW,cAA7BC,OAAOnO,SAASoO,UAEe,UAA7BD,OAAOnO,SAASoO,UAEhBD,OAAOnO,SAASoO,SAASC,MAAM,2DCfnC,I,GAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,UCaCQ,GAnBEC,aAAH,oTAOI7L,EAAME,QAAQC,UAAUC,KAC7BJ,EAAME,QAAQC,UAAUG,MAGLN,EAAME,QAAQC,UAAUC,KAG3CJ,EAAME,QAAQC,UAAUE,M,OCPrCyL,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,eAACC,GAAA,EAAD,CAAejM,MAAOA,EAAtB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,SAGR4F,SAASC,eAAe,SHmHtB,kBAAmBpK,WACrBA,UAAUyQ,cAAcC,MACrBb,MAAK,SAACc,GACLA,EAAaC,gBAEdC,OAAM,SAAC9R,GACNM,QAAQN,MAAMA,EAAMc,YG9G5B6P,O","file":"static/js/main.dcbbbdcf.chunk.js","sourcesContent":["import * as jwt from 'jsonwebtoken';\r\n\r\n\r\nconst useGetToken = () => jwt.sign({ app: 'customer', name:'whereisitapp', date:Date.now() }, 'whereisitcustomerapp');\r\n\r\nexport default useGetToken\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {LatLngLiteral} from \"leaflet\";\r\n\r\nconst useGetCurrentLocation = (options: object = {}) => {\r\n\r\n    const [center, setCenter] = useState<LatLngLiteral>({lat: 0, lng: 0});\r\n    const [error, setError] = useState<string | undefined>();\r\n    const locationWatchId: React.MutableRefObject<undefined | number> = useRef();\r\n\r\n    const handleSuccess = (position: any) => {\r\n        console.log(\"Latitude: \" + position.coords.latitude.toPrecision(21) +\r\n            \" Longitude: \" + position.coords.longitude.toPrecision(21) +\r\n            \" Accuracy: \" + position.coords.accuracy\r\n        )\r\n\r\n        setCenter({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n        })\r\n    }\r\n\r\n    const handleError = (error: any) => {\r\n        setError(error.message)\r\n    }\r\n\r\n    const cancelLocationWatch = () => {\r\n        if (locationWatchId.current && navigator.geolocation) {\r\n            navigator.geolocation.clearWatch(locationWatchId.current);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            locationWatchId.current = navigator.geolocation.watchPosition(handleSuccess, handleError, options)\r\n        } else {\r\n            alert(\"It can't handle geo location\")\r\n        }\r\n        return cancelLocationWatch\r\n    }, [options])\r\n\r\n    return {center, cancelLocationWatch, error}\r\n}\r\n\r\nexport default useGetCurrentLocation","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.mapbox.com/directions/v5/mapbox/'\r\n})\r\n\r\nexport default instance","import {Geometry, Legs, Maneuver, Route, Step, Waypoints} from '../interfaces';\r\nimport {LatLngTuple} from 'leaflet';\r\n\r\nconst manageGeometry = (data: Geometry): Geometry => {\r\n    let coordinates: Array<LatLngTuple> = []\r\n\r\n    data.coordinates.forEach(item => {\r\n        coordinates.push([item[1], item[0]])\r\n    })\r\n\r\n    return {\r\n        type: data.type,\r\n        coordinates: coordinates\r\n    }\r\n}\r\n\r\nconst manageManeuver = (data: Maneuver): Maneuver => {\r\n    return {\r\n        bearing_after: data.bearing_after,\r\n        bearing_before: data.bearing_before,\r\n        location: [data.location[1], data.location[0]],\r\n        instruction: data.instruction,\r\n        type: data.type,\r\n        modifier:data.modifier\r\n    }\r\n}\r\n\r\nconst manageSteps = (data: Array<Step>): Array<Step> => {\r\n    let response: Array<Step> = []\r\n\r\n    data.forEach((item: Step) => {\r\n        response.push({\r\n            driving_side: item.driving_side,\r\n            destinations: item.destinations,\r\n            mode: item.mode,\r\n            duration: item.duration,\r\n            name: item.name,\r\n            distance: item.distance,\r\n            maneuver: manageManeuver(item.maneuver),\r\n            geometry: manageGeometry(item.geometry)\r\n        })\r\n    })\r\n    return response\r\n}\r\n\r\nconst manageLegs = (data: Array<Legs>): Array<Legs> => {\r\n    let response: Array<Legs> = []\r\n    data.forEach((item: Legs) => {\r\n        response.push({\r\n            summary: item.summary,\r\n            distance: item.distance,\r\n            duration: item.distance,\r\n            steps: manageSteps(item.steps)\r\n        })\r\n    })\r\n    return response\r\n}\r\n\r\n\r\nconst manageRoutes = (data: Array<Route>): Array<Route> => {\r\n    let response: Array<Route> = []\r\n\r\n    data.forEach((item: Route) => {\r\n        response.push({\r\n            duration: item.duration,\r\n            distance: item.distance,\r\n            legs: manageLegs(item.legs),\r\n            geometry: manageGeometry(item.geometry)\r\n        })\r\n    })\r\n\r\n    return response\r\n}\r\n\r\nconst manageWaypoints = (data: Array<Waypoints>): Array<Waypoints> => {\r\n    let response: Array<Waypoints> = []\r\n\r\n    data.forEach(item => {\r\n        response.push({\r\n            distance: item.distance,\r\n            location: [item.location[1], item.location[0]],\r\n            name: item.name\r\n        })\r\n    })\r\n\r\n    return response\r\n}\r\n\r\n\r\nexport {\r\n    manageRoutes,\r\n    manageWaypoints\r\n}","export const MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN","import {useEffect, useState} from 'react';\r\nimport {LatLngLiteral} from 'leaflet';\r\n\r\nimport axios from './../axios'\r\nimport {manageRoutes, manageWaypoints} from './auxiliary/dataCleaner'\r\nimport {Direction, DirectionsProps} from './interfaces';\r\nimport {MAPBOX_TOKEN} from '../credentials';\r\n\r\nconst isLatLngLiteral = (data: object): data is LatLngLiteral => {\r\n    //method to check if the type is LatLngLiteral\r\n    return (data as LatLngLiteral).lat !== undefined && (data as LatLngLiteral).lng !== undefined\r\n}\r\n\r\nconst alignCoordinates = (departure: LatLngLiteral, target: Array<LatLngLiteral>): string => {\r\n    let coordinates: Array<string> = [`${departure.lng}%2C${departure.lat}`,]\r\n\r\n    target.map((item) => coordinates.push(`${item.lng}%2C${item.lat}`))\r\n    return coordinates.join('%3B')\r\n}\r\n\r\n\r\nconst validateCoordinates = (coordinates: LatLngLiteral | Array<LatLngLiteral>):boolean => {\r\n    let flag:boolean = false\r\n\r\n    if (isLatLngLiteral(coordinates)) {\r\n        flag = coordinates.lng !== 0 && coordinates.lat !== 0\r\n    }\r\n\r\n    else {\r\n        for (let item of coordinates) {\r\n            flag = validateCoordinates(item)\r\n        }\r\n    }\r\n\r\n    return flag\r\n}\r\n\r\nconst useDirection = ({target,departure,alternatives,steps,profile}: DirectionsProps) => {\r\n    const [direction, setDirection] = useState<Direction>()\r\n    const [url, setUrl] = useState<string>()\r\n\r\n    //TODO coordinates[0] is my current position\r\n    let [coordinates, setCoordinates] = useState<string>()\r\n\r\n    useEffect(()=>{\r\n        if (validateCoordinates(departure) && validateCoordinates(target)){\r\n            let auxiliary = alignCoordinates(departure, target)\r\n            setCoordinates(auxiliary)\r\n        }\r\n    },[departure, target])\r\n\r\n    useEffect(() => {\r\n        if (coordinates) {\r\n            setUrl(`${profile}/${coordinates}?alternatives=${alternatives}&geometries=geojson&steps=${steps}&bearings=60,45;45,45&overview=full&access_token=${MAPBOX_TOKEN}`)\r\n        }\r\n    }, [coordinates, alternatives, profile, steps])\r\n\r\n    useEffect(() => {\r\n        const getDirections = async () => {\r\n            try {\r\n                const {data, status} = await axios.get<Direction>(url!)\r\n                if (status && status === 200) {\r\n                    setDirection({\r\n                        routes: manageRoutes(data.routes),\r\n                        waypoints: manageWaypoints(data.waypoints)\r\n                    })\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        if (url) {\r\n            getDirections()\r\n        }\r\n    }, [url])\r\n    return direction\r\n}\r\n\r\nexport default useDirection","import {Marker, Popup} from \"react-leaflet\";\r\nimport {DivIcon, LatLngLiteral} from \"leaflet\";\r\nimport {FC, memo, ReactNode, useMemo} from \"react\";\r\n\r\ninterface MarkerProps {\r\n    position: LatLngLiteral,\r\n    icon?: DivIcon,\r\n    children?: ReactNode,\r\n    name?: string\r\n    description?: string\r\n}\r\n\r\nconst MarkerComponent: FC<MarkerProps> = ({position, icon, name, description}) => {\r\n    return useMemo(()=>(\r\n        <Marker position={position} icon={icon}>\r\n            <Popup>\r\n                <div>\r\n                    {name || 'A pretty CSS3 popup.'} <br/> {description || 'Easily customizable'}.\r\n                </div>\r\n            </Popup>\r\n        </Marker>\r\n    ),[description, icon, name, position])\r\n}\r\n\r\nexport default memo(MarkerComponent);","import {makeStyles, responsiveFontSizes, ThemeOptions, unstable_createMuiStrictModeTheme as createMuiTheme} from \"@material-ui/core\";\r\n\r\nimport {CSSProperties} from \"react\";\r\n\r\ndeclare module \"@material-ui/core/styles/createPalette\" {\r\n    interface Palette {\r\n        grayscale: {\r\n            light: CSSProperties['color'];\r\n            main: CSSProperties['color'];\r\n            dark: CSSProperties['color'];\r\n        }\r\n    }\r\n\r\n    interface PaletteOptions {\r\n        grayscale: {\r\n            light: CSSProperties['color'];\r\n            main: CSSProperties['color'];\r\n            dark: CSSProperties['color'];\r\n        }\r\n    }\r\n}\r\n\r\nfunction createMyTheme(options: ThemeOptions) {\r\n    return createMuiTheme({\r\n        palette: {\r\n            grayscale: {\r\n                dark: '#000000',\r\n                main: '#4c4c4c',\r\n                light: '#ffffff',\r\n            }\r\n        },\r\n        ...options\r\n    })\r\n}\r\n\r\nlet theme = createMyTheme({})\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst customStyles = makeStyles({\r\n    mapStyle: {\r\n        width: '100%',\r\n        height: '100vh',\r\n        position: 'relative',\r\n    },\r\n    customMarker: {\r\n        position: 'absolute',\r\n        color: theme.palette.warning.main,\r\n        top: '-200%',\r\n        left: '-100%',\r\n        width: '2.3rem',\r\n        height: '2.3rem',\r\n    },\r\n    navigationIcon: {\r\n        margin:'0 0.5rem'\r\n    },\r\n    dashboardStyle: {\r\n        boxShadow: `0 1px 3px 2px ${theme.palette.grayscale.main}`,\r\n        color: theme.palette.grayscale.light,\r\n        background: theme.palette.grayscale.dark,\r\n        opacity: '85%',\r\n        borderRadius: '6px',\r\n        padding: '0.5rem',\r\n        zIndex: 500,\r\n        position: 'absolute'\r\n    },\r\n});\r\n\r\n\r\nexport {\r\n    theme,\r\n    customStyles\r\n}","import {LatLngTuple, LatLngLiteral} from \"leaflet\";\r\n\r\nexport enum Profile {\r\n    driving = 'driving',\r\n    cycling = 'cycling',\r\n    walking = 'walking',\r\n    drivingTraffic = 'driving-traffic'\r\n}\r\n\r\nexport interface DirectionsProps {\r\n    profile: string,\r\n    departure: LatLngLiteral,\r\n    target: Array<LatLngLiteral>,\r\n    steps: boolean,\r\n    alternatives: boolean,\r\n}\r\n\r\nexport interface Waypoints {\r\n    distance?: number,\r\n    name?: string,\r\n    location: LatLngTuple\r\n}\r\n\r\nexport interface Maneuver {\r\n    bearing_after: number,\r\n    bearing_before: number,\r\n    location: LatLngTuple,\r\n    type: string,\r\n    modifier?: string,\r\n    instruction: string\r\n}\r\n\r\nexport interface Geometry {\r\n    coordinates: Array<LatLngTuple>,\r\n    type: string\r\n}\r\n\r\nexport interface Step {\r\n    driving_side?: string,\r\n    destinations?:string,\r\n    mode: string,\r\n    duration: number,\r\n    name?: string,\r\n    distance: number,\r\n    maneuver: Maneuver\r\n    geometry: Geometry\r\n}\r\n\r\nexport interface Legs {\r\n    summary?: string,\r\n    distance: number,\r\n    duration: number,\r\n    steps: Array<Step>,\r\n}\r\n\r\nexport interface Route {\r\n    duration: number,\r\n    distance: number,\r\n    legs: Array<Legs>\r\n    geometry: Geometry,\r\n}\r\n\r\nexport interface Direction {\r\n    routes: Array<Route>\r\n    waypoints: Array<Waypoints>,\r\n}\r\n\r\n","import {FC, memo, useEffect, useMemo, useRef} from 'react';\r\nimport {renderToStaticMarkup} from 'react-dom/server';\r\nimport {LocationOn, PersonPinCircle} from '@material-ui/icons'\r\nimport {useTheme} from '@material-ui/core';\r\nimport {MapContainer, Polyline, TileLayer} from 'react-leaflet';\r\nimport L from 'leaflet';\r\n\r\nimport MarkerComponent from './marker';\r\nimport {MapProps} from './interfaces';\r\nimport {MAPBOX_TOKEN} from '../../services/credentials';\r\nimport {customStyles} from \"../../context/theme\";\r\n\r\nconst MapComponent: FC<MapProps> = ({places, zoom, center, direction}) => {\r\n    const customStyle = customStyles();\r\n    const {palette} = useTheme()\r\n    const mapRef = useRef<L.Map>()\r\n\r\n    const centerIcon = useMemo(() => L.divIcon({\r\n        html: renderToStaticMarkup(\r\n            <PersonPinCircle className={customStyle.customMarker} style={{color: palette.primary.main}}/>),\r\n        popupAnchor: [2, -28]\r\n    }), [customStyle.customMarker, palette.primary.main])\r\n\r\n    const optionIcon = useMemo(() => L.divIcon({\r\n        html: renderToStaticMarkup(<LocationOn className={customStyle.customMarker}/>),\r\n        popupAnchor: [2, -28]\r\n    }), [customStyle.customMarker])\r\n\r\n    const whenCreatedHandler = (map: L.Map) => mapRef.current = map\r\n\r\n    useEffect(() => {\r\n        if (mapRef.current) {\r\n            mapRef.current.setView(center, zoom);\r\n        }\r\n    }, [center, zoom])\r\n\r\n    return <div className={customStyle.mapStyle} style={{margin: '-8px'}}>\r\n        <MapContainer zoom={zoom} className={customStyle.mapStyle} zoomAnimation={true} scrollWheelZoom={true}\r\n                      zoomControl={false}\r\n                      whenCreated={whenCreatedHandler}>\r\n            <TileLayer\r\n                attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\r\n                url=\"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}\"\r\n                id={'mapbox/streets-v11'}\r\n                accessToken={MAPBOX_TOKEN}\r\n                tileSize={512}\r\n                zoomOffset={-1}\r\n            />\r\n            {\r\n                center && <MarkerComponent position={center} icon={centerIcon}/>\r\n            }\r\n            {\r\n                places && places.map((item: any, index: number) => {\r\n                    return <MarkerComponent position={item.coordinate} key={index} icon={optionIcon}/>\r\n                })\r\n            }\r\n            {\r\n                direction && direction.length > 0 && <Polyline pathOptions={{color: palette.error.main, weight: 5}}\r\n                                                               positions={direction}/>\r\n            }\r\n        </MapContainer>\r\n    </div>\r\n}\r\n\r\nexport default memo(MapComponent);","import {Place} from \"../components/Map/interfaces\";\r\n\r\nexport const places: Array<Place> =  [\r\n    {\r\n        coordinate: {\r\n            lat:25.684283415043094,\r\n            lng:-80.41913012972027\r\n        },\r\n        name: \"Publix Super Market at Higate Square\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.672061446129067,\r\n            lng: -80.4312322559634\r\n        },\r\n        name: \"Fresco y Más\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.683939172142516,\r\n            lng: -80.43275405895899\r\n        },\r\n        name: \"Festival Supermarket\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.714857552456085,\r\n            lng: -80.39435588386571\r\n        },\r\n        name: \"El Ranchito Marketplace\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.713024753573123,\r\n            lng: -80.4330950291638\r\n        },\r\n        name: \"Presidente Supermarket\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.715601288890685,\r\n            lng: -80.43029425388335\r\n        },\r\n        name: \"Sedano's Supermarket\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.69125971191103,\r\n            lng: -80.3877791296447\r\n        },\r\n        name: \"Publix Super Market at Kendall Town & Country\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.68687493692666,\r\n            lng: -80.40242022778254\r\n        },\r\n        name: \"Puerto Madero Miami\"\r\n    }\r\n]","import {FC, memo} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {useTheme} from \"@material-ui/core\";\r\nimport {AlertTitle} from \"@material-ui/lab\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport {ErrorNotificationProps} from \"./interfaces\";\r\n\r\nconst Cover = styled.div`\r\n  background: ${({theme}) => theme.palette.warning.main};\r\n  text-align: center;\r\n  height: 94vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  padding: 1rem;\r\n`\r\n\r\nconst ErrorNotification: FC<ErrorNotificationProps> = ({error}) => {\r\n    const theme = useTheme();\r\n\r\n    // return <Cover theme={theme}>\r\n    //     <Typography style={{marginBottom:'1rem'}} variant={'h3'}>{error}</Typography>\r\n    //     <img style={{marginBottom:'1rem'}} width={250} src={process.env.PUBLIC_URL+'/assets/clipart2475630.png'} alt={'gps off'}/>\r\n    //     <Typography style={{marginBottom:'1rem'}} variant={'h6'}>You should activate the GPS in order to help you find what you are looking for!</Typography>\r\n    // </Cover>\r\n    return <Alert severity=\"warning\" style={{position: 'absolute', zIndex: 500, top: '20px', left: '20px'}}>\r\n        <AlertTitle>Warning</AlertTitle>\r\n        {error} — <strong>You should activate the GPS in order to help you find what you are looking for!</strong>\r\n    </Alert>\r\n}\r\n\r\nexport default memo(ErrorNotification)","import {FC, memo} from \"react\";\r\nimport {Add, Remove} from \"@material-ui/icons\";\r\nimport {customStyles} from \"../../../context/theme\";\r\nimport styled from \"styled-components\";\r\nimport {ZoomButtonProps} from \"./interfaces\";\r\n\r\nconst Cover = styled.div`\r\n  right: 25px;\r\n  bottom: 50px;\r\n  margin: 1rem 1rem;\r\n  width: 40px;\r\n  height: 70px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  cursor: pointer;\r\n`\r\n\r\nconst ZoomButton: FC<ZoomButtonProps> = ({currentZoom, onChangeZoom}) => {\r\n    const {dashboardStyle} = customStyles()\r\n\r\n    return <Cover className={dashboardStyle}>\r\n        <Add onClick={() => currentZoom < 18 && onChangeZoom(++currentZoom)}/>\r\n        <Remove onClick={() => currentZoom > 12 && onChangeZoom(--currentZoom)}/>\r\n    </Cover>\r\n}\r\n\r\nexport default memo(ZoomButton)","import React, {FC, memo} from \"react\";\r\nimport {Button, TextField, useTheme} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport {customStyles} from \"../../../context/theme\";\r\nimport {ArrowForwardIos} from \"@material-ui/icons\";\r\nimport {CustomInputParams} from \"./interface\";\r\n\r\nconst Cover = styled.div`\r\n  right: 25px;\r\n  top: 90px;\r\n  margin: 1rem 1rem;\r\n  width: 260px;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  z-index: 500;\r\n  position: absolute;\r\n\r\n  .MuiInputBase-input {\r\n    color: ${({theme}) => theme.palette.grayscale.dark};\r\n    font-size: large;\r\n  }\r\n\r\n  .MuiFormLabel-root {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .MuiFormLabel-root.Mui-focused {\r\n    color: ${({theme}) => theme.palette.warning.main};\r\n  }\r\n`\r\n\r\nconst CI = styled(TextField)`\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst CustomInput: FC<CustomInputParams> = ({onSetTarget}) => {\r\n    const {dashboardStyle} = customStyles()\r\n    const theme = useTheme()\r\n\r\n    const textFieldHandler = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.preventDefault()\r\n        // @ts-ignore\r\n        let lat = document.getElementById('lat').value;\r\n        // @ts-ignore\r\n        let lng = document.getElementById('lng').value;\r\n\r\n        onSetTarget({lat: lat, lng: lng})\r\n\r\n    }\r\n\r\n    return <Cover theme={theme}>\r\n        <div style={{display: 'flex', flexDirection: 'column'}}>\r\n            <CI id={'lat'} label=\"Latitude\" variant=\"filled\"/>\r\n            <CI id={'lng'} label=\"Longitude\" variant=\"filled\"/>\r\n        </div>\r\n        <Button variant=\"contained\" color=\"default\" startIcon={<ArrowForwardIos/>} className={dashboardStyle}\r\n                style={{\r\n                    color: theme.palette.grayscale.light,\r\n                    background: theme.palette.grayscale.dark,\r\n                    opacity: '85%',\r\n                    borderRadius: '6px',\r\n                    padding: '0.5rem',\r\n                    height: '130px',\r\n                    margin: '0 0 1rem 0.5rem',\r\n                    minWidth: '2rem',\r\n                    position:'relative'\r\n                }}\r\n                onClick={textFieldHandler}/>\r\n    </Cover>\r\n\r\n}\r\n\r\nexport default memo(CustomInput)","import {\r\n    AutorenewOutlined,\r\n    CallMadeOutlined,\r\n    CallMergeOutlined,\r\n    Help,\r\n    PanToolOutlined,\r\n    PinDropOutlined,\r\n    PlaceOutlined,\r\n    SubdirectoryArrowLeftOutlined,\r\n    SubdirectoryArrowRightOutlined,\r\n    SyncOutlined\r\n} from \"@material-ui/icons\";\r\n\r\nimport {SignalGeneratorProps} from \"./interfaces\";\r\n\r\nconst SignalGenerator = ({type, modifier, iconCssClass}:SignalGeneratorProps) => {\r\n\r\n    if (type === 'arrive') {\r\n        // if (modifier === 'left') //TODO change icon for this\r\n        return <PlaceOutlined className={iconCssClass} fontSize='large'/>\r\n        // if (modifier === 'right') //TODO change icon for this\r\n        //     return <PlaceOutlined className={navigationIcon} fontSize='large'/>\r\n    }\r\n    else if (type === 'depart') {\r\n        return <PinDropOutlined className={iconCssClass} fontSize='large'/>\r\n    }\r\n    else if (type === 'end of road') {\r\n        if (modifier === 'left') {\r\n            return <SubdirectoryArrowLeftOutlined className={iconCssClass} style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'right') {\r\n            return <SubdirectoryArrowRightOutlined className={iconCssClass} style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        return <PanToolOutlined className={iconCssClass} fontSize='large'/>\r\n    }\r\n    else if (type === 'on ramp') {\r\n        if (modifier === 'left') {\r\n            return <SubdirectoryArrowLeftOutlined className={iconCssClass} style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'right') {\r\n            return <SubdirectoryArrowRightOutlined className={iconCssClass} style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight right'){ //TODO change icon for this\r\n            return <CallMadeOutlined className={iconCssClass} fontSize='large'/>\r\n        }\r\n        else {//if (modifier === 'slight left') //TODO change icon for this\r\n            return <CallMadeOutlined className={iconCssClass} style={{transform: 'rotateY(180deg)'}} fontSize='large'/>\r\n        }\r\n    }\r\n    else if (type === 'turn') {\r\n        if (modifier === 'right') {\r\n            return <SubdirectoryArrowRightOutlined className={iconCssClass} style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight right'){ //TODO change icon for this\r\n            return <CallMadeOutlined className={iconCssClass} fontSize='large'/>\r\n        }\r\n        if (modifier === 'left') {\r\n            return <SubdirectoryArrowLeftOutlined className={iconCssClass} style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        else {//if (modifier === 'slight left') //TODO change icon for this\r\n            return <CallMadeOutlined className={iconCssClass} style={{transform: 'rotateY(180deg)'}} fontSize='large'/>\r\n        }\r\n    }\r\n    else if (type === 'off ramp') {\r\n        if (modifier === 'slight right'){ //TODO change icon for this\r\n            return <CallMadeOutlined className={iconCssClass} fontSize='large'/>\r\n        }\r\n        else {//if (modifier === 'slight left') //TODO change icon for this\r\n            return <CallMadeOutlined className={iconCssClass} style={{transform: 'rotateY(180deg)'}} fontSize='large'/>\r\n        }\r\n    }\r\n    else if (type === 'fork') {\r\n        if (modifier === 'slight right'){ //TODO change icon for this\r\n            return <CallMadeOutlined className={iconCssClass} fontSize='large'/>\r\n        }\r\n        else {//if (modifier === 'slight left') //TODO change icon for this\r\n            return <CallMadeOutlined className={iconCssClass} style={{transform: 'rotateY(180deg)'}} fontSize='large'/>\r\n        }\r\n    }\r\n    else if (type === 'roundabout') {\r\n        if (modifier === 'slight right' || modifier === 'right') {\r\n            return <AutorenewOutlined className={iconCssClass} fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight left' || modifier === 'left') {\r\n            return <SyncOutlined className={iconCssClass} fontSize='large'/>\r\n        }\r\n\r\n        if (modifier === 'straight') {\r\n            return <CallMergeOutlined className={iconCssClass} fontSize='large'/>\r\n        }\r\n    }\r\n    else if(type === 'continue'){\r\n        if (modifier === 'left') {\r\n            return <SubdirectoryArrowLeftOutlined className={iconCssClass} style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'right') {\r\n            return <SubdirectoryArrowRightOutlined className={iconCssClass} style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n    }\r\n    else { //(modifier==='straight')\r\n        return <Help className={iconCssClass} fontSize='large'/>\r\n    }\r\n}\r\n\r\nexport default SignalGenerator","import {FC, memo} from \"react\";\r\nimport {ArrowBackIos} from \"@material-ui/icons\";\r\nimport {CircularProgress, Typography, useTheme} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {customStyles} from \"../../../../context/theme\";\r\nimport {NavigatorProps} from \"./interfaces\";\r\nimport SignalGenerator from \"../NavigationDrawer/SignalGenerator\";\r\n\r\nconst Cover = styled.div`\r\n  right: 25px;\r\n  margin: 1rem 1rem;\r\n  width: 260px;\r\n  max-height: 60px;\r\n  min-height: 40px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n`\r\n\r\nconst NavigationBox: FC<NavigatorProps> = ({navigation, onClickBox}) => {\r\n    const theme = useTheme()\r\n    const {navigationIcon, dashboardStyle} = customStyles()\r\n    // const [navigate, setNavigate] = useState(navigation || {type:'departure',modifier:'straight', instruction:undefined})\r\n\r\n\r\n    // TODO separate this function and the one in the drawer to an external file\r\n    const handleStepString = (name?: string, destination?: string): string => {\r\n        let value: Array<string> = []\r\n        if (name) {\r\n            value.push(name)\r\n        }\r\n        if (destination) {\r\n            value.push(destination)\r\n        }\r\n        return value.join('\\n')\r\n    }\r\n\r\n    return <Cover theme={theme} className={dashboardStyle} onClick={onClickBox}>\r\n        {\r\n            navigation ? <div style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    width: '100%'\r\n                }}>\r\n                    <ArrowBackIos fontSize={'small'} style={{margin: '0 0.5rem'}}/>\r\n                    <div>\r\n                        <Typography variant={'body2'}>{navigation.instruction}</Typography>\r\n\r\n                        <Typography variant={'caption'} style={{color: theme.palette.grayscale.main}}>{\r\n                            handleStepString(navigation.name, navigation.destination)\r\n                        }</Typography>\r\n                    </div>\r\n                    {\r\n                        SignalGenerator({\r\n                            type: navigation.type,\r\n                            modifier: navigation.modifier,\r\n                            iconCssClass: navigationIcon\r\n                        })\r\n                    }\r\n                </div>\r\n                : <CircularProgress disableShrink style={{color: \"white\"}} size={25}/>\r\n        }\r\n    </Cover>\r\n}\r\n\r\nexport default memo(NavigationBox)","import {FC, memo} from \"react\";\r\nimport {Avatar, Drawer, List, ListItem, ListItemAvatar, ListItemText} from \"@material-ui/core\";\r\n\r\nimport {customStyles} from \"../../../../context/theme\";\r\nimport {NavigationDrawerParams} from \"./interfaces\";\r\nimport {Step} from \"../../../../services/mapbox/interfaces\";\r\nimport SignalGenerator from \"./SignalGenerator\";\r\n\r\n\r\nconst NavigationDrawer: FC<NavigationDrawerParams> = ({open, onDrawerClose, route}) => {\r\n    const {navigationIcon} = customStyles()\r\n\r\n    const handleStepString = (step: Step): string => {\r\n        let value: Array<string> = []\r\n        if (step.name) {\r\n            value.push(step.name)\r\n        }\r\n        if (step.destinations) {\r\n            value.push(step.destinations)\r\n        }\r\n        return value.join('\\n')\r\n    }\r\n\r\n    return <Drawer anchor={\"right\"} open={open} onClose={onDrawerClose}>\r\n        <List>\r\n            {\r\n                route && route.legs[0].steps.map((step, index) => {\r\n                    return <ListItem key={index} alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <Avatar style={{backgroundColor: 'transparent'}}>\r\n                                    {\r\n                                        SignalGenerator({\r\n                                            type: step.maneuver.type,\r\n                                            modifier: step.maneuver.modifier,\r\n                                            iconCssClass: navigationIcon\r\n                                        })\r\n                                    }\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={step.maneuver.instruction} secondary={handleStepString(step)}/>\r\n                        </ListItem>\r\n                })\r\n            }\r\n        </List>\r\n    </Drawer>\r\n}\r\n\r\nexport default memo(NavigationDrawer)","\r\n// Converts numeric degrees to radians\r\nfunction toRad(value:number)\r\n{\r\n    return value * Math.PI / 180;\r\n}\r\n\r\n\r\n//This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\r\nfunction distanceBetweenPoint(lat1:number, lon1:number, lat2:number, lon2:number)\r\n{\r\n    let R = 6371; // km\r\n    let dLat = toRad(lat2-lat1);\r\n    let dLon = toRad(lon2-lon1);\r\n    let radLat1 = toRad(lat1);\r\n    let radLat2 = toRad(lat2);\r\n\r\n    let a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(radLat1) * Math.cos(radLat2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    return  R * c * 1000; //to meter\r\n}\r\n\r\n\r\n\r\nexport default distanceBetweenPoint\r\n","import {FC, memo, useCallback, useEffect, useState} from \"react\";\r\n\r\nimport NavigationBox from \"./NavigationBox\";\r\nimport NavigationDrawer from \"./NavigationDrawer\";\r\nimport {NavigationComponentProps} from \"./interfaces\";\r\nimport {NavigationManeuver} from \"./NavigationBox/interfaces\";\r\nimport distanceBetweenPoint from \"../../../services/distanceBetweenPoint\";\r\n\r\nconst NavigationComponent:FC<NavigationComponentProps> = ({direction, location}) => {\r\n    const [currentStep, setCurrentStep] = useState<number>()\r\n    \r\n    const [navigation, setNavigation] = useState<NavigationManeuver>();\r\n\r\n    const [drawerFlag, setDrawerFlag] = useState<boolean>(false)\r\n\r\n    const onClickBox = useCallback(() => {\r\n        setDrawerFlag(!drawerFlag)\r\n    }, [drawerFlag])\r\n\r\n    useEffect(()=>{\r\n        //TODO fix distance\r\n        direction?.routes[0].legs[0].steps.forEach((step,index)=>{\r\n            let distance = 0\r\n            step.geometry.coordinates.forEach((coordinate)=>{\r\n                distance = distanceBetweenPoint(location.lat, location.lng, coordinate[0], coordinate[1])\r\n                console.log('DISTANCE IN METERS INSIDE LOOP: ',parseInt(distance.toFixed(2)))\r\n                if(parseInt(distance.toFixed(2)) < 30)\r\n                    setCurrentStep(index)\r\n            })\r\n\r\n        })\r\n    },[direction?.routes, location.lat, location.lng])\r\n\r\n    useEffect(()=>{\r\n        if (currentStep !== undefined) {\r\n            setNavigation({\r\n                type: direction?.routes[0].legs[0].steps[currentStep].maneuver.type!, //'departure',\r\n                modifier: direction?.routes[0].legs[0].steps[currentStep].maneuver.modifier,//'straight',\r\n                instruction: direction?.routes[0].legs[0].steps[currentStep].maneuver.instruction,\r\n                name: direction?.routes[0].legs[0].steps[currentStep].name,\r\n                destination: direction?.routes[0].legs[0].steps[currentStep].destinations,\r\n            })\r\n        }\r\n    },[currentStep, direction?.routes])\r\n\r\n    return <>\r\n        {\r\n            navigation && <NavigationBox navigation={navigation} onClickBox={onClickBox}/>\r\n        }\r\n        <NavigationDrawer open={drawerFlag} onDrawerClose={onClickBox} route={direction?.routes[0]}/>\r\n    </>\r\n}\r\n\r\nexport default memo(NavigationComponent)","import {useCallback, useEffect, useState} from \"react\";\r\nimport {LatLngLiteral} from \"leaflet\";\r\n\r\nimport {useDirection, useGetCurrentLocation} from \"../../services\";\r\nimport MapComponent from \"../Map\";\r\nimport {places as listPlaces} from \"../../services/places\";\r\nimport {Profile} from \"../../services/mapbox/interfaces\";\r\nimport {Place} from \"../Map/interfaces\";\r\nimport ErrorNotification from \"./ErrorNotification\";\r\nimport ZoomButton from \"./ZoomButton\";\r\nimport CustomInput from \"./CustomInput\";\r\nimport NavigationComponent from \"./Navigation\";\r\n\r\nconst Dashboard = () => {\r\n\r\n    //TODO temporary state\r\n    const [places, setPlaces] = useState<Array<Place>>(listPlaces)\r\n\r\n    const [target, setTarget] = useState<Array<LatLngLiteral>>([{lat: 25.69125971191103, lng: -80.3877791296447}])\r\n\r\n    const [zoom, setZoom] = useState(15);\r\n\r\n    const [profile, setProfile] = useState(Profile.driving);\r\n\r\n\r\n\r\n    const options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 1000, //* 60, // 1 min (1000 ms * 60 sec * 1 minute = 60 000ms)\r\n        maximumAge: 1000 * 3600 * 24 // 24 hour       : 27000\r\n    };\r\n    const {center, cancelLocationWatch, error} = useGetCurrentLocation(options)\r\n\r\n    const direction = useDirection({\r\n        profile: profile,\r\n        departure: center,\r\n        target: target,\r\n        steps: true, //mandatory\r\n        alternatives: false //unnecessary alternative\r\n    })\r\n\r\n    const onChangeZoom = useCallback((value: number) => {\r\n        console.log(value)\r\n        setZoom(value)\r\n    }, [])\r\n\r\n    //TODO FOR TEST ONLY\r\n    const onSetTarget = useCallback((value: LatLngLiteral) => {\r\n        let param: Array<LatLngLiteral> = []\r\n        if (value.lat && value.lng) {\r\n            param.push(value)\r\n            setTarget(param)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!center.lat && !center.lng) return;\r\n\r\n        setTimeout(() => {\r\n            cancelLocationWatch();\r\n        }, 6000);\r\n\r\n    }, [center, cancelLocationWatch, error]);\r\n\r\n    return <>\r\n        <NavigationComponent direction={direction} location={center}/>\r\n\r\n        <MapComponent places={places} zoom={zoom} center={center}\r\n                      direction={direction?.routes[0].geometry.coordinates!}/>\r\n\r\n        <ZoomButton currentZoom={zoom} onChangeZoom={onChangeZoom}/>\r\n\r\n        {\r\n            error && <ErrorNotification error={error}/>\r\n        }\r\n\r\n        {/*TODO FOR TEST ONLY*/}\r\n        <CustomInput onSetTarget={onSetTarget}/>\r\n    </>\r\n}\r\n\r\nexport default Dashboard","import {useEffect, useState} from 'react';\r\nimport {useGetToken} from './services';\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\nfunction App() {\r\n    const [token, setToken] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        setToken(useGetToken)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                {/*<button onClick={()=>alert(token)}>Click</button>*/}\r\n                <Dashboard/>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createGlobalStyle} from 'styled-components';\r\nimport {theme} from './theme'\r\n\r\nconst AppStyle = createGlobalStyle`\r\n  .leaflet-div-icon {\r\n    background:transparent;\r\n    border: none;\r\n  }\r\n\r\n  .MuiDrawer-paper{\r\n    background: ${theme.palette.grayscale.dark};\r\n    color: ${theme.palette.grayscale.light};\r\n    opacity: 90%;\r\n    width: 18rem;\r\n    box-shadow: 0 1px 2px 1px ${theme.palette.grayscale.dark};\r\n  }\r\n  .MuiTypography-colorTextSecondary {\r\n    color: ${theme.palette.grayscale.main};\r\n  }\r\n`;\r\n\r\n\r\nexport default AppStyle","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport {theme} from './context/theme';\r\nimport AppStyle from './context/appStyle';\r\nimport 'fontsource-roboto';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ThemeProvider theme={theme}>\r\n            <App/>\r\n            <AppStyle/>\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}