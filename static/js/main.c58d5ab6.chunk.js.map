{"version":3,"sources":["context/hooks.ts","styles/theme.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","context/slices/notification.ts","context/slices/coordinate.ts","services/getCurrentLocation.tsx","services/distanceBetweenPoint.ts","services/mapbox/interfaces.ts","components/Notification/index.tsx","components/Dashboard/Alert/index.tsx","components/Dashboard/Navigation/NavigationDrawer/SignalGenerator/index.tsx","components/Dashboard/Navigation/NavigationBox/index.tsx","components/Dashboard/Navigation/NavigationDrawer/index.tsx","services/mapbox/auxiliary/dataCleaner.ts","context/slices/direction.ts","services/axios/index.tsx","services/mapbox/index.ts","components/Dashboard/Navigation/LocomotioPicker/index.tsx","components/Dashboard/Navigation/index.tsx","components/Dashboard/ProductComponent/ProductResquestResponsive/ProductRequestDrawer/index.tsx","components/Dashboard/ProductComponent/ProductResquestResponsive/index.tsx","components/Dashboard/ProductComponent/ProductRequest/index.tsx","components/Dashboard/ProductComponent/index.tsx","components/Dashboard/NotificationAlert/index.tsx","components/Dashboard/Configuration/ConfigurationButton/index.tsx","components/Dashboard/Configuration/ZoomButton/index.tsx","components/Dashboard/Configuration/index.tsx","context/slices/map.ts","components/Dashboard/index.tsx","context/slices/places.ts","services/places.ts","components/Extras/CustomInput/index.tsx","components/Extras/index.tsx","App.tsx","styles/appStyle.tsx","context/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","options","theme","createMuiTheme","palette","grayscale","dark","darkGray","main","light","responsiveFontSizes","customStyles","makeStyles","mapStyle","width","height","position","customMarker","color","warning","top","left","dashboardStyle","background","opacity","padding","borderRadius","drawerSelectedItem","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ErrorCode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","setCoordinate","createAsyncThunk","thunkAPI","a","latitude","longitude","accuracy","dispatch","type","payload","departure","lat","lng","coordinateSlice","createSlice","name","initialState","gpsAccuracyThreshold","positionAccuracyThreshold","reducers","updateConfiguration","action","updateGpsAccuracy","flag","positionAccuracy","extraReducers","builder","addCase","fulfilled","actions","notification","NONE","notificationSlice","changeNotification","useGetCurrentLocation","coordinates","locationWatchId","useRef","handleSuccess","useCallback","coords","toPrecision","undefined","setTimeout","handleError","code","TIMEOUT","message","current","geolocation","watchPosition","PERMISSION_DENIED","cancelLocationWatch","clearWatch","useEffect","GEO_LOCATION_UNSUPPORTED","toRad","value","Math","PI","distanceBetweenPoint","Profile","lat1","lon1","lat2","lon2","dLat","dLon","radLat1","radLat2","sin","cos","atan2","sqrt","Wrapper","styled","div","Notification","props","notificationContainer","document","getElementById","content","useMemo","children","ReactDOM","createPortal","memo","AlertComponent","React","useState","open","setOpen","severity","SUCCESS","WARNING","Collapse","in","className","Alert","IconButton","aria-label","size","onClick","event","reason","fontSize","style","backgroundColor","SignalGenerator","modifier","PlaceOutlined","PinDropOutlined","SubdirectoryArrowLeftOutlined","transform","SubdirectoryArrowRightOutlined","PanToolOutlined","CallMadeOutlined","ArrowUpwardOutlined","AutorenewOutlined","SyncOutlined","RedoOutlined","UndoOutlined","Help","SettingsBackupRestoreOutlined","Cover","NavigationBox","navigation","onClickBox","useTheme","map","display","flexDirection","justifyContent","alignItems","ArrowBackIos","margin","responsive","Typography","variant","maneuver","instruction","secondary","step","push","destinations","join","handleStepString","distance","toFixed","duration","CustomDrawer","Drawer","NavigationDrawer","onDrawerClose","route","currentStep","listRef","c","tagName","classList","forEach","toString","attributes","ownerElement","add","anchor","onClose","marginRight","cursor","List","ref","legs","steps","index","paddingTop","paddingBottom","ListItem","ListItemIcon","StatusType","manageGeometry","data","item","manageManeuver","bearing_after","bearing_before","manageSteps","response","driving_side","mode","geometry","manageLegs","summary","manageRoutes","manageWaypoints","instance","axios","create","baseURL","alignCoordinates","target","validateCoordinates","getDirection","alternatives","profile","url","process","REACT_APP_MAPBOX_TOKEN","get","configuration","driving","direction","status","requestDirection","_","getState","routes","waypoints","API_REQUEST_ERROR","directionSlice","setConfiguration","setStatus","pending","rejected","LocomotionPicker","onClickLocomotion","setValue","data-testid","BottomNavigation","onChange","newValue","BottomNavigationAction","icon","DriveEtaOutlined","about","cycling","DirectionsBikeOutlined","walking","DirectionsWalkOutlined","ErrorCover","NavigationComponent","setCurrentStep","setNavigation","drawerFlag","setDrawerFlag","setRoutes","coordinate","parseInt","CircularProgress","disableShrink","ProductRequestDrawer","onCloseDrawer","marginLeft","SearchProduct","ProductRequestResponsive","Menu","ProductRequest","ProductComponent","CustomDialog","Dialog","NotificationAlert","handleClose","reload","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","CustomPopper","Popper","ConfigurationButton","anchorEl","setAnchorEl","gpsAccuracySwitch","setGpsAccuracySwitch","positionAccuracySwitch","setPositionAccuracySwitch","onChangeHandler","e","currentTarget","Settings","placement","transition","TransitionProps","Fade","timeout","Paper","FormControl","component","FormGroup","FormControlLabel","control","Switch","checked","label","ZoomButton","zoom","onChangeZoom","_zoom","Add","Remove","Configuration","mapSlice","changeZoom","setResponsive","Dashboard","updateDimensions","innerWidth","addEventListener","removeEventListener","Navigation","places","placesSlice","addPlace","getPlaces","CI","TextField","CustomInput","onSetTarget","startIcon","ArrowForwardIos","minWidth","preventDefault","CurrentPosition","Extras","param","App","MapComponent","lazy","enableHighAccuracy","maximumAge","fallback","LinearProgress","AppStyle","createGlobalStyle","reducer","combineReducers","store","configureStore","devTools","render","StrictMode","ThemeProvider","URL","href","origin","fetch","headers","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c58d5ab6.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, DispatchState } from './store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<DispatchState>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { makeStyles, responsiveFontSizes, ThemeOptions, unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core\";\r\n\r\nimport { CSSProperties } from \"react\";\r\n\r\ndeclare module \"@material-ui/core/styles/createPalette\" {\r\n    interface Palette {\r\n        grayscale: {\r\n            light: CSSProperties['color'];\r\n            main: CSSProperties['color'];\r\n            dark: CSSProperties['color'];\r\n            darkGray: CSSProperties['color'];\r\n        }\r\n    }\r\n\r\n    interface PaletteOptions {\r\n        grayscale: {\r\n            light: CSSProperties['color'];\r\n            main: CSSProperties['color'];\r\n            dark: CSSProperties['color'];\r\n            darkGray: CSSProperties['color'];\r\n        }\r\n    }\r\n}\r\n\r\nfunction createMyTheme(options: ThemeOptions) {\r\n    return createMuiTheme({\r\n        palette: {\r\n            grayscale: {\r\n                dark: '#000000',\r\n                darkGray: '#232323',\r\n                main: '#777777',\r\n                light: '#ffffff',\r\n            }\r\n        },\r\n        ...options\r\n    })\r\n}\r\n\r\nlet theme = createMyTheme({})\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst customStyles = makeStyles({\r\n    mapStyle: {\r\n        width: '100%',\r\n        height: '100vh',\r\n        position: 'relative',\r\n    },\r\n    customMarker: {\r\n        position: 'absolute',\r\n        color: theme.palette.warning.main,\r\n        top: '-200%',\r\n        left: '-100%',\r\n        width: '2.3rem',\r\n        height: '2.3rem',\r\n    },\r\n    dashboardStyle: {\r\n        color: theme.palette.grayscale.light,\r\n        background: theme.palette.grayscale.dark,\r\n        opacity: '85%',\r\n        padding: '0.5rem',\r\n        borderRadius: '5px',\r\n    },\r\n    drawerSelectedItem: {\r\n        background: theme.palette.warning.main,\r\n    }\r\n});\r\n\r\n\r\nexport {\r\n    theme,\r\n    customStyles\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport enum ErrorCode {\r\n    //error\r\n    PERMISSION_DENIED = 'PERMISSION_DENIED',\r\n    POSITION_UNAVAILABLE = 'POSITION_UNAVAILABLE',\r\n    API_REQUEST_ERROR = 'API_REQUEST_ERROR',\r\n    GEO_LOCATION_UNSUPPORTED = 'GEO_LOCATION_UNSUPPORTED',\r\n    TIMEOUT = 'TIMEOUT',\r\n\r\n    //warning\r\n    WARNING = 'WARNING',\r\n\r\n    //success\r\n    SUCCESS = 'SUCCESS',\r\n    NONE = 'NONE',\r\n}\r\n\r\nexport interface MapType {\r\n    notification: string,\r\n    type: ErrorCode\r\n}\r\n\r\nconst initialState: MapType = {\r\n    notification: '',\r\n    type: ErrorCode.NONE\r\n}\r\n\r\nexport const notificationSlice = createSlice({\r\n    name: 'notification',\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeNotification: (state, action: PayloadAction<MapType>) => {\r\n            state.notification = action.payload.notification\r\n            state.type = action.payload.type || ErrorCode.NONE\r\n        },\r\n    }\r\n})\r\n\r\n\r\nexport const {changeNotification} = notificationSlice.actions\r\n\r\nexport default notificationSlice.reducer","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\n\r\n\r\ninterface CoordinateType {\r\n    latitude: number;\r\n    longitude: number;\r\n    accuracy: number;\r\n    gpsAccuracyThreshold?: number,\r\n    positionAccuracyThreshold?: number,\r\n}\r\n\r\nconst initialState: CoordinateType = {\r\n    latitude: 0,\r\n    longitude: 0,\r\n    accuracy: 0,\r\n    gpsAccuracyThreshold: 30,\r\n    positionAccuracyThreshold: 20,\r\n}\r\n\r\n\r\nexport const setCoordinate = createAsyncThunk(\r\n    'coordinate/configuration',\r\n    async ({latitude, longitude, accuracy }:CoordinateType, thunkAPI) => {\r\n        thunkAPI.dispatch({\r\n            type: 'direction/setConfiguration', payload: {\r\n                departure: {\r\n                    lat: latitude,\r\n                    lng: longitude,\r\n                }\r\n            }\r\n        })\r\n        return {latitude:latitude, longitude:longitude, accuracy: accuracy} as CoordinateType\r\n    }\r\n)\r\n\r\n\r\nexport const coordinateSlice = createSlice({\r\n    name:'coordinate',\r\n    initialState: initialState,\r\n    reducers:{\r\n        updateConfiguration: (state, action) => {\r\n            state = {...action.payload}\r\n        },\r\n        updateGpsAccuracy:(state,action) =>{\r\n            state.gpsAccuracyThreshold = action.payload.flag ? 30 : 18000\r\n        },\r\n        positionAccuracy:(state,action) =>{\r\n            state.positionAccuracyThreshold = action.payload.flag ? 20 : 90\r\n\r\n        },\r\n    },\r\n    extraReducers:(builder)=>{\r\n        builder.addCase(setCoordinate.fulfilled, (state, {payload})=>{\r\n            state.latitude = payload.latitude;\r\n            state.longitude = payload.longitude;\r\n            state.accuracy = payload.accuracy;\r\n        })\r\n\r\n    }\r\n});\r\n\r\nexport const { updateConfiguration, positionAccuracy, updateGpsAccuracy } = coordinateSlice.actions;\r\n\r\nexport default coordinateSlice.reducer;","import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useAppSelector } from \"../context/hooks\";\r\nimport { setCoordinate } from '../context/slices/coordinate';\r\nimport { ErrorCode } from \"../context/slices/notification\";\r\n\r\n\r\nconst useGetCurrentLocation = (options: object) => {\r\n    const dispatch = useDispatch()\r\n    const { gpsAccuracyThreshold } = useAppSelector(state => state.coordinates)\r\n    const coordinates = useAppSelector(state => state.coordinates)\r\n    const locationWatchId: React.MutableRefObject<undefined | number> = useRef();\r\n\r\n    const handleSuccess = useCallback((position: any) => {\r\n        console.log(\"Latitude: \" + position.coords.latitude.toPrecision(21) +\r\n            \" Longitude: \" + position.coords.longitude.toPrecision(21) +\r\n            \" Accuracy: \" + position.coords.accuracy\r\n        )\r\n\r\n        if (gpsAccuracyThreshold === undefined || position.coords.accuracy <= gpsAccuracyThreshold) {\r\n            if (coordinates.latitude !== position.coords.latitude || coordinates.longitude !== position.coords.longitude) {\r\n                dispatch(setCoordinate({\r\n                    latitude: position.coords.latitude,\r\n                    longitude: position.coords.longitude,\r\n                    accuracy: position.coords.accuracy,\r\n                }))\r\n                dispatch({ type: 'notification/changeNotification', payload: { notification: '' } })\r\n            }\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                if (gpsAccuracyThreshold !== undefined || position.coords.accuracy > gpsAccuracyThreshold)\r\n                    dispatch({ type: 'notification/changeNotification', payload: { notification: 'Failed to reach desired accuracy' } })\r\n            }, 1000)\r\n        }\r\n\r\n\r\n    }, [gpsAccuracyThreshold, coordinates.latitude, coordinates.longitude, dispatch])\r\n\r\n    const handleError = useCallback((error: any) => {\r\n        if (error) {\r\n            switch (error.code) {\r\n                case (error.TIMEOUT):\r\n                    dispatch({\r\n                        type: 'notification/changeNotification',\r\n                        payload: { notification: error.message, type: ErrorCode.TIMEOUT }\r\n                    })\r\n                    locationWatchId.current = navigator.geolocation.watchPosition(handleSuccess, handleError, options)\r\n                    break;\r\n                case (error.PERMISSION_DENIED):\r\n                    dispatch({\r\n                        type: 'notification/changeNotification',\r\n                        payload: { notification: error.message, type: ErrorCode.PERMISSION_DENIED }\r\n                    })\r\n                    break;\r\n            }\r\n        }\r\n    }, [dispatch, handleSuccess, options])\r\n\r\n    const cancelLocationWatch = () => {\r\n        if (locationWatchId.current && navigator.geolocation) {\r\n            navigator.geolocation.clearWatch(locationWatchId.current);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            locationWatchId.current = navigator.geolocation.watchPosition(handleSuccess, handleError, options)\r\n        } else {\r\n            dispatch({\r\n                type: 'notification/changeNotification',\r\n                payload: { notification: \"It can't handle geo location\", type: ErrorCode.GEO_LOCATION_UNSUPPORTED }\r\n            })\r\n\r\n        }\r\n        return cancelLocationWatch\r\n    }, [dispatch, handleError, handleSuccess, options])\r\n\r\n    return cancelLocationWatch\r\n}\r\n\r\nexport default useGetCurrentLocation","\r\n// Converts numeric degrees to radians\r\nfunction toRad(value:number)\r\n{\r\n    return value * Math.PI / 180;\r\n}\r\n\r\n\r\n//This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\r\nfunction distanceBetweenPoint(lat1:number, lon1:number, lat2:number, lon2:number)\r\n{\r\n    let R = 6371; // km\r\n    let dLat = toRad(lat2-lat1);\r\n    let dLon = toRad(lon2-lon1);\r\n    let radLat1 = toRad(lat1);\r\n    let radLat2 = toRad(lat2);\r\n\r\n    let a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(radLat1) * Math.cos(radLat2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    return  R * c * 1000; //to meter\r\n}\r\n\r\n\r\n\r\nexport default distanceBetweenPoint\r\n","import {LatLngTuple, LatLngLiteral} from \"leaflet\";\r\n\r\nexport enum Profile {\r\n    driving = 'driving',\r\n    cycling = 'cycling',\r\n    walking = 'walking',\r\n    drivingTraffic = 'driving-traffic'\r\n}\r\n\r\nexport interface DirectionsProps {\r\n    profile: string,\r\n    departure?: LatLngLiteral,\r\n    target?: Array<LatLngLiteral>,\r\n    steps: boolean,\r\n    alternatives: boolean,\r\n}\r\n\r\nexport interface Waypoints {\r\n    distance?: number,\r\n    name?: string,\r\n    location: LatLngTuple\r\n}\r\n\r\nexport interface Maneuver {\r\n    bearing_after: number,\r\n    bearing_before: number,\r\n    location: LatLngTuple,\r\n    type: string,\r\n    modifier?: string,\r\n    instruction: string\r\n}\r\n\r\nexport interface Geometry {\r\n    coordinates: Array<LatLngTuple>,\r\n    type: string\r\n}\r\n\r\nexport interface Step {\r\n    driving_side?: string,\r\n    destinations?:string,\r\n    mode: string,\r\n    duration: number,\r\n    name?: string,\r\n    distance: number,\r\n    maneuver: Maneuver\r\n    geometry: Geometry\r\n}\r\n\r\nexport interface Legs {\r\n    summary?: string,\r\n    distance: number,\r\n    duration: number,\r\n    steps: Array<Step>,\r\n}\r\n\r\nexport interface Route {\r\n    duration: number,\r\n    distance: number,\r\n    legs: Array<Legs>\r\n    geometry: Geometry,\r\n}\r\n\r\nexport interface Direction {\r\n    routes: Array<Route>\r\n    waypoints: Array<Waypoints>,\r\n}\r\n\r\n","import { memo, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  z-index: 500;\r\n  bottom: 40px;\r\n  left: 3%;\r\n  border-radius: 0;\r\n`;\r\n\r\nconst Notification = (props: any) => {\r\n\r\n  const notificationContainer: HTMLElement = document.getElementById('app-notification')!\r\n\r\n  const content = useMemo(() => <Wrapper> {props.children} </Wrapper>, [props.children])\r\n\r\n  return notificationContainer ? ReactDOM.createPortal(\r\n    content,\r\n    notificationContainer\r\n  ) : null;\r\n}\r\n\r\nexport default memo(Notification)","import React, { memo, useCallback } from 'react';\r\nimport { Collapse, IconButton } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { customStyles } from \"../../../styles/theme\";\r\nimport { useAppSelector } from \"../../../context/hooks\";\r\nimport { ErrorCode } from \"../../../context/slices/notification\";\r\n\r\nimport Notification from '../../Notification'\r\n\r\nconst AlertComponent = () => {\r\n    const { notification, type } = useAppSelector(state => state.error)\r\n\r\n    const { dashboardStyle } = customStyles()\r\n    const [open, setOpen] = React.useState(!notification);\r\n\r\n    const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const severity = useCallback(() => {\r\n        switch (type) {\r\n            case ErrorCode.SUCCESS:\r\n                return 'success'\r\n            case ErrorCode.WARNING:\r\n                return 'warning'\r\n            default:\r\n                return 'error'\r\n        }\r\n    }, [type])\r\n\r\n    return <>\r\n        {\r\n            notification && <Notification>\r\n                <Collapse in={open} className={dashboardStyle}>\r\n                    <Alert severity={severity()} action={\r\n                        <IconButton aria-label=\"close\" color=\"inherit\" size=\"small\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    } style={{ backgroundColor: 'unset', color: 'white' }}>\r\n                        {notification}\r\n                    </Alert>\r\n                </Collapse>\r\n            </Notification>\r\n        }\r\n    </>\r\n\r\n}\r\n\r\nexport default memo(AlertComponent)","import {\r\n    ArrowUpwardOutlined,\r\n    AutorenewOutlined,\r\n    CallMadeOutlined,\r\n    Help,\r\n    PanToolOutlined,\r\n    PinDropOutlined,\r\n    PlaceOutlined,\r\n    RedoOutlined,\r\n    SettingsBackupRestoreOutlined,\r\n    SubdirectoryArrowLeftOutlined,\r\n    SubdirectoryArrowRightOutlined,\r\n    SyncOutlined,\r\n    UndoOutlined\r\n} from \"@material-ui/icons\";\r\n\r\nimport {SignalGeneratorProps} from \"./interfaces\";\r\n\r\nconst SignalGenerator = ({type, modifier}: SignalGeneratorProps) => {\r\n\r\n    if (type === 'arrive') {\r\n        // if (modifier === 'left') //TODO change icon for this\r\n        return <PlaceOutlined fontSize='large'/>\r\n        // if (modifier === 'right') //TODO change icon for this\r\n        //     return <PlaceOutlined className={navigationIcon} fontSize='large'/>\r\n    } else if (type === 'depart') {\r\n        return <PinDropOutlined fontSize='large'/>\r\n    } else if (type === 'end of road') {\r\n        if (modifier === 'left') {\r\n            return <SubdirectoryArrowLeftOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'right') {\r\n            return <SubdirectoryArrowRightOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        return <PanToolOutlined fontSize='large'/>\r\n    } else if (type === 'on ramp') {\r\n        if (modifier === 'left') {\r\n            return <SubdirectoryArrowLeftOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'right') {\r\n            return <SubdirectoryArrowRightOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight right') { //TODO change icon for this\r\n            return <CallMadeOutlined fontSize='large'/>\r\n        } else {//if (modifier === 'slight left') //TODO change icon for this\r\n            return <CallMadeOutlined style={{transform: 'rotateY(180deg)'}} fontSize='large'/>\r\n        }\r\n    } else if (type === 'turn') {\r\n        if (modifier === 'right') {\r\n            return <SubdirectoryArrowRightOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight right') { //TODO change icon for this\r\n            return <CallMadeOutlined fontSize='large'/>\r\n        }\r\n        if (modifier === 'left') {\r\n            return <SubdirectoryArrowLeftOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight left') { //TODO change icon for this\r\n            return <CallMadeOutlined style={{transform: 'rotateY(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'straight') { //TODO change icon for this\r\n            return <ArrowUpwardOutlined fontSize='large'/>\r\n        }\r\n        if (modifier === 'sharp right') { //TODO change icon for this\r\n            return <SubdirectoryArrowRightOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'sharp left') { //TODO change icon for this\r\n            return <SubdirectoryArrowLeftOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n    } else if (type === 'off ramp') {\r\n        if (modifier === 'slight right') { //TODO change icon for this\r\n            return <CallMadeOutlined fontSize='large'/>\r\n        } else {//if (modifier === 'slight left') //TODO change icon for this\r\n            return <CallMadeOutlined style={{transform: 'rotateY(180deg)'}} fontSize='large'/>\r\n        }\r\n    } else if (type === 'fork') {\r\n        if (modifier === 'slight right') { //TODO change icon for this\r\n            return <CallMadeOutlined fontSize='large'/>\r\n        } else {//if (modifier === 'slight left') //TODO change icon for this\r\n            return <CallMadeOutlined style={{transform: 'rotateY(180deg)'}} fontSize='large'/>\r\n        }\r\n    } else if (type === 'roundabout') {\r\n        if (modifier === 'slight right' || modifier === 'right') {\r\n            return <AutorenewOutlined fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight left' || modifier === 'left') {\r\n            return <SyncOutlined fontSize='large'/>\r\n        }\r\n\r\n        if (modifier === 'straight') {\r\n            return <ArrowUpwardOutlined fontSize='large'/>\r\n        }\r\n    } else if (type === 'roundabout turn') {\r\n        if (modifier === 'right') {\r\n            return <RedoOutlined fontSize='large'/>\r\n        }\r\n        if (modifier === 'left') {\r\n            return <UndoOutlined fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight right') { //TODO change icon for this\r\n            return <RedoOutlined fontSize='large'/>\r\n        } else {  //(modifier === 'slight left')\r\n            return <UndoOutlined fontSize='large'/>\r\n        }\r\n    } else if (type === 'new name') { //TODO to change soon\r\n        if (modifier === 'slight right') {\r\n            return <CallMadeOutlined fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight left') {\r\n            return <CallMadeOutlined fontSize='large'/>\r\n        }\r\n        // if (modifier === 'slight left' || modifier === 'left') {\r\n        //     return <SyncOutlined    fontSize='large'/>\r\n        // }\r\n        if (modifier === 'straight') {\r\n            return <ArrowUpwardOutlined fontSize='large'/>\r\n        }\r\n    } else if (type === 'continue') {\r\n        if (modifier === 'left') {\r\n            return <SubdirectoryArrowLeftOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'right') {\r\n            return <SubdirectoryArrowRightOutlined style={{transform: 'rotateX(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'uturn') {\r\n            return <SettingsBackupRestoreOutlined fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight right') { //TODO change icon for this\r\n            return <CallMadeOutlined fontSize='large'/>\r\n        }\r\n        if (modifier === 'slight left') { //TODO change icon for this\r\n            return <CallMadeOutlined style={{transform: 'rotateY(180deg)'}} fontSize='large'/>\r\n        }\r\n        if (modifier === 'straight') { //TODO change icon for this\r\n            return <ArrowUpwardOutlined fontSize='large'/>\r\n        }\r\n    } else { //(modifier==='straight')\r\n        return <Help fontSize='large'/>\r\n    }\r\n}\r\n\r\nexport default SignalGenerator","import {FC, memo} from \"react\";\r\nimport {ArrowBackIos} from \"@material-ui/icons\";\r\nimport styled from \"styled-components\";\r\nimport {Typography, useTheme} from \"@material-ui/core\";\r\n\r\nimport {customStyles} from \"../../../../styles/theme\";\r\nimport {NavigatorProps} from \"./interfaces\";\r\nimport SignalGenerator from \"../NavigationDrawer/SignalGenerator\";\r\nimport {Step} from \"../../../../services/mapbox/interfaces\";\r\nimport { useAppSelector } from \"../../../../context/hooks\";\r\n\r\nconst Cover = styled.div`\r\n  min-height: 40px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  margin-bottom: 5px;\r\n\r\n  width:250px;\r\n\r\n  @media screen and (max-width:600px){\r\n      width:70px;\r\n  }\r\n`\r\n\r\nconst NavigationBox: FC<NavigatorProps> = ({navigation, onClickBox}) => {\r\n    const theme = useTheme()\r\n    const {dashboardStyle} = customStyles()\r\n    const state = useAppSelector(state => state.map)\r\n\r\n    const handleStepString = (step: Step): string => {\r\n        let value: Array<string> = []\r\n        if (step.name) {\r\n            value.push(step.name)\r\n        }\r\n        if (step.destinations) {\r\n            value.push(step.destinations)\r\n        }\r\n        return value.join('\\n')\r\n    }\r\n\r\n    return <Cover theme={theme} onClick={onClickBox} className={dashboardStyle}>\r\n        {\r\n            navigation && <div style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    width: '100%'\r\n                }}>\r\n                    <ArrowBackIos fontSize={'small'} style={{margin: '0 0.5rem'}}/>\r\n                    {\r\n                        !state.responsive && <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                            <Typography variant={'body1'}>{navigation.maneuver.instruction}</Typography>\r\n\r\n                            <Typography variant='body2' style={{color: theme.palette.secondary.main}}>{\r\n                                handleStepString(navigation)\r\n                            }</Typography>\r\n\r\n                            <Typography variant='subtitle2' style={{color: theme.palette.grayscale.main}}>\r\n                                {navigation.distance.toFixed()} meters | {(navigation.duration / 60).toFixed()} min\r\n                            </Typography>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        SignalGenerator({\r\n                            type: navigation.maneuver.type,\r\n                            modifier: navigation.maneuver.modifier,\r\n                        })\r\n                    }\r\n                </div>\r\n        }\r\n    </Cover>\r\n}\r\n\r\nexport default memo(NavigationBox)","import React, {FC, memo, useCallback} from \"react\";\r\nimport {Drawer, List, ListItem, ListItemIcon, Typography, useTheme} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport {Close} from \"@material-ui/icons\";\r\n\r\n\r\nimport {customStyles} from \"../../../../styles/theme\";\r\nimport {NavigationDrawerParams} from \"./interfaces\";\r\nimport {Step} from \"../../../../services/mapbox/interfaces\";\r\nimport SignalGenerator from \"./SignalGenerator\";\r\n\r\nconst CustomDrawer = styled(Drawer)`\r\n  .MuiPaper-root {\r\n    background-color: ${({theme}) => theme.palette.grayscale.darkGray};\r\n    opacity: 90%;\r\n    max-width:400px;\r\n\r\n    @media screen and (max-width: 375px) {\r\n        width: 310px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavigationDrawer: FC<NavigationDrawerParams> = ({open, onDrawerClose, route, currentStep}) => {\r\n    const {drawerSelectedItem} = customStyles()\r\n    const theme = useTheme()\r\n\r\n    const handleStepString = (step: Step): string => {\r\n        let value: Array<string> = []\r\n        if (step.name) {\r\n            value.push(step.name)\r\n        }\r\n        if (step.destinations) {\r\n            value.push(step.destinations)\r\n        }\r\n        return value.join('\\n')\r\n    }\r\n\r\n    const listRef = useCallback((value: HTMLUListElement) => {\r\n        if (value && currentStep !== undefined) {\r\n            for (let c of value.children) {\r\n                if (c.tagName === 'DIV') {\r\n                    c.classList.forEach(value => {\r\n                        if (value === currentStep.toString()) {\r\n                            c.attributes[0].ownerElement?.classList.add(drawerSelectedItem)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }, [currentStep, drawerSelectedItem])\r\n\r\n\r\n    return <CustomDrawer anchor={\"right\"} open={open} onClose={onDrawerClose} theme={theme}>\r\n        <Close fontSize=\"inherit\" onClick={onDrawerClose}\r\n               style={{\r\n                   color: theme.palette.grayscale.main,\r\n                   marginRight: '90%',\r\n                   padding: '10px 0 0 8px',\r\n                   cursor: 'pointer'\r\n               }}/>\r\n        <List ref={listRef}>\r\n            {\r\n                route && route.legs[0].steps.map((step, index) => {\r\n                    return <div style={{paddingTop: '4px', paddingBottom: '6px'}} className={`${index}`} key={index}>\r\n\r\n                        <ListItem alignItems=\"flex-start\" >\r\n\r\n                            <ListItemIcon style={{color: 'white'}}>\r\n                                {\r\n                                    SignalGenerator({\r\n                                        type: step.maneuver.type,\r\n                                        modifier: step.maneuver.modifier,\r\n                                    })\r\n                                }\r\n                            </ListItemIcon>\r\n\r\n                            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                                <Typography variant={'body1'}\r\n                                            style={{color: theme.palette.grayscale.light}}>{step.maneuver.instruction}</Typography>\r\n\r\n                                <Typography variant='body2' style={{color: theme.palette.secondary.main}}>{\r\n                                    handleStepString(step)\r\n                                }</Typography>\r\n\r\n                                <Typography variant='subtitle2' style={{color: theme.palette.grayscale.main}}>\r\n                                    {step.distance.toFixed()} meters | {(step.duration / 60).toFixed()} min\r\n                                </Typography>\r\n                            </div>\r\n                        </ListItem>\r\n                    </div>\r\n                })\r\n            }\r\n        </List>\r\n    </CustomDrawer>\r\n}\r\n\r\nexport default memo(NavigationDrawer)","import {Geometry, Legs, Maneuver, Route, Step, Waypoints} from '../interfaces';\r\nimport {LatLngTuple} from 'leaflet';\r\n\r\nconst manageGeometry = (data: Geometry): Geometry => {\r\n    let coordinates: Array<LatLngTuple> = []\r\n\r\n    data.coordinates.forEach(item => {\r\n        coordinates.push([item[1], item[0]])\r\n    })\r\n\r\n    return {\r\n        type: data.type,\r\n        coordinates: coordinates\r\n    }\r\n}\r\n\r\nconst manageManeuver = (data: Maneuver): Maneuver => {\r\n    return {\r\n        bearing_after: data.bearing_after,\r\n        bearing_before: data.bearing_before,\r\n        location: [data.location[1], data.location[0]],\r\n        instruction: data.instruction,\r\n        type: data.type,\r\n        modifier:data.modifier\r\n    }\r\n}\r\n\r\nconst manageSteps = (data: Array<Step>): Array<Step> => {\r\n    let response: Array<Step> = []\r\n\r\n    data.forEach((item: Step) => {\r\n        response.push({\r\n            driving_side: item.driving_side,\r\n            destinations: item.destinations,\r\n            mode: item.mode,\r\n            duration: item.duration,\r\n            name: item.name,\r\n            distance: item.distance,\r\n            maneuver: manageManeuver(item.maneuver),\r\n            geometry: manageGeometry(item.geometry)\r\n        })\r\n    })\r\n    return response\r\n}\r\n\r\nconst manageLegs = (data: Array<Legs>): Array<Legs> => {\r\n    let response: Array<Legs> = []\r\n    data.forEach((item: Legs) => {\r\n        response.push({\r\n            summary: item.summary,\r\n            distance: item.distance,\r\n            duration: item.distance,\r\n            steps: manageSteps(item.steps)\r\n        })\r\n    })\r\n    return response\r\n}\r\n\r\n\r\nconst manageRoutes = (data: Array<Route>): Array<Route> => {\r\n    let response: Array<Route> = []\r\n\r\n    data.forEach((item: Route) => {\r\n        response.push({\r\n            duration: item.duration,\r\n            distance: item.distance,\r\n            legs: manageLegs(item.legs),\r\n            geometry: manageGeometry(item.geometry)\r\n        })\r\n    })\r\n\r\n    return response\r\n}\r\n\r\nconst manageWaypoints = (data: Array<Waypoints>): Array<Waypoints> => {\r\n    let response: Array<Waypoints> = []\r\n\r\n    data.forEach(item => {\r\n        response.push({\r\n            distance: item.distance,\r\n            location: [item.location[1], item.location[0]],\r\n            name: item.name\r\n        })\r\n    })\r\n\r\n    return response\r\n}\r\n\r\n\r\nexport {\r\n    manageRoutes,\r\n    manageWaypoints\r\n}","import {Direction, Profile} from \"../../services/mapbox/interfaces\";\r\nimport {LatLngLiteral} from \"leaflet\";\r\nimport {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {manageRoutes, manageWaypoints} from \"../../services/mapbox/auxiliary/dataCleaner\";\r\nimport {getDirection} from \"../../services/mapbox\";\r\nimport {RootState} from \"../store\";\r\nimport {ErrorCode} from \"./notification\";\r\n\r\n\r\nexport interface DirectionConfigurationType {\r\n    profile: Profile,\r\n    departure: LatLngLiteral,\r\n    target: Array<LatLngLiteral> | undefined,\r\n    steps: boolean,\r\n    alternatives: boolean\r\n}\r\n\r\nexport enum StatusType {\r\n    pending = 'pending',\r\n    fulfilled = 'fulfilled',\r\n    rejected = 'rejected'\r\n}\r\n\r\nexport interface DirectionType {\r\n    configuration: DirectionConfigurationType,\r\n    direction: Direction | undefined,\r\n    status: string,\r\n}\r\n\r\n\r\nconst initialState: DirectionType = {\r\n    configuration: {\r\n        profile: Profile.driving,\r\n        departure: {lat:0,lng:0},\r\n        target: [{lat: 25.69125971191103, lng: -80.3877791296447}], //TODO this target will change depending on the API\r\n        steps: true, //mandatory\r\n        alternatives: false //unnecessary alternative}\r\n    },\r\n    direction: undefined,\r\n    status: StatusType.fulfilled,\r\n}\r\n\r\nexport const requestDirection = createAsyncThunk(\r\n    'direction/requestDirection',\r\n    // async ({alternatives, steps, departure, profile, target}: DirectionConfigurationType, thunkAPI) => {\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const {direction} = thunkAPI.getState() as RootState\r\n\r\n            let {data} = await getDirection({\r\n                alternatives: direction.configuration.alternatives,\r\n                target: direction.configuration.target,\r\n                departure: direction.configuration.departure,\r\n                profile: direction.configuration.profile,\r\n                steps: direction.configuration.steps,\r\n            })\r\n            thunkAPI.dispatch({type: 'notification/changeNotification', payload:{notification:''}})\r\n\r\n            return {\r\n                routes: manageRoutes(data.routes),\r\n                waypoints: manageWaypoints(data.waypoints)\r\n            } as Direction\r\n\r\n        } catch (error) {\r\n            console.log('direction request error: ', error)\r\n            thunkAPI.dispatch({type: 'notification/changeNotification', payload:{notification:error.message, type: ErrorCode.API_REQUEST_ERROR}})\r\n        }\r\n    }\r\n)\r\n\r\nexport const directionSlice = createSlice({\r\n    name: 'direction',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setConfiguration: (state, action: PayloadAction<DirectionConfigurationType>) => {\r\n            state.configuration = {...state.configuration, ...action.payload}\r\n        },\r\n        setStatus: (state, action) => {\r\n            state.status = action.payload.status\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(requestDirection.pending, (state) => {\r\n            state.status = StatusType.pending\r\n            state.direction = undefined\r\n        })\r\n        builder.addCase(requestDirection.fulfilled, (state, {payload}) => {\r\n            state.status = StatusType.fulfilled\r\n            state.direction = payload!\r\n        })\r\n        builder.addCase(requestDirection.rejected, (state) => {\r\n            state.status = StatusType.rejected\r\n        })\r\n    }\r\n})\r\n\r\nexport const {setConfiguration, setStatus} = directionSlice.actions\r\n\r\nexport default directionSlice.reducer","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.mapbox.com/directions/v5/mapbox/'\r\n})\r\n\r\nexport default instance","import {LatLngLiteral} from \"leaflet\";\r\n\r\nimport axios from \"./../axios\";\r\nimport {Direction, DirectionsProps} from \"./interfaces\";\r\n// import {MAPBOX_TOKEN} from \"../credentials\";\r\n\r\nconst isLatLngLiteral = (data: object): data is LatLngLiteral => {\r\n    //method to check if the type is LatLngLiteral\r\n    return (data as LatLngLiteral).lat !== undefined && (data as LatLngLiteral).lng !== undefined\r\n}\r\n\r\nconst alignCoordinates = (departure: LatLngLiteral, target: Array<LatLngLiteral>): string => {\r\n    let coordinates: Array<string> = [`${departure.lng}%2C${departure.lat}`,]\r\n\r\n    target.map((item) => coordinates.push(`${item.lng}%2C${item.lat}`))\r\n    return coordinates.join('%3B')\r\n}\r\n\r\nconst validateCoordinates = (coordinates: LatLngLiteral | Array<LatLngLiteral>): boolean => {\r\n    let flag: boolean = false\r\n\r\n    if (isLatLngLiteral(coordinates)) {\r\n        flag = coordinates.lng !== 0 && coordinates.lat !== 0\r\n    } else {\r\n        for (let item of coordinates) {\r\n            flag = validateCoordinates(item)\r\n        }\r\n    }\r\n\r\n    return flag\r\n}\r\n\r\nexport const getDirection = async ({alternatives, target, departure, profile, steps}: DirectionsProps) => {\r\n    let coordinates: string = ''\r\n\r\n    if (departure && target && validateCoordinates(departure) && validateCoordinates(target)) {\r\n        coordinates = alignCoordinates(departure, target)\r\n    }\r\n\r\n    let url = `${profile}/${coordinates}?alternatives=${alternatives}&geometries=geojson&steps=${steps}&bearings=60,45;45,45&overview=full&access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\r\n\r\n    return await axios.get<Direction>(url)\r\n}","import { memo, useCallback, useState } from \"react\";\r\nimport { BottomNavigation, BottomNavigationAction, useTheme } from \"@material-ui/core\";\r\nimport { DirectionsBikeOutlined, DirectionsWalkOutlined, DriveEtaOutlined } from \"@material-ui/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { customStyles } from \"../../../../styles/theme\";\r\nimport { Profile } from \"../../../../services/mapbox/interfaces\";\r\nimport { StatusType } from \"../../../../context/slices/direction\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 130px;\r\n\r\n  .MuiBottomNavigation-root {\r\n    background-color: unset;\r\n    height: unset;\r\n  }\r\n\r\n  .MuiBottomNavigationAction-root {\r\n    max-width: unset;\r\n    min-width: unset;\r\n    color: unset;\r\n  }\r\n\r\n  .MuiBottomNavigationAction-root.Mui-selected {\r\n    color: ${({ theme }) => theme.palette.warning.main};\r\n    padding-top: 8px;\r\n  }\r\n\r\n  .MuiBottomNavigationAction-root.MuiBottomNavigationAction-iconOnly {\r\n    padding-top: 8px;\r\n  }\r\n`;\r\n\r\nconst LocomotionPicker = () => {\r\n  const { dashboardStyle } = customStyles()\r\n  const theme = useTheme()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const onClickLocomotion = useCallback((value: Profile) => {\r\n    dispatch({ type: 'direction/setConfiguration', payload: { profile: value } })\r\n    dispatch({ type: 'direction/setStatus', payload: { status: StatusType.pending } })\r\n\r\n  }, [dispatch])\r\n\r\n  const [value, setValue] = useState(0)\r\n\r\n  return <Wrapper style={{ padding: 0 }} className={dashboardStyle} theme={theme} data-testid='locomotion-picker'>\r\n    <BottomNavigation value={value} onChange={(event, newValue) => {\r\n      setValue(newValue);\r\n    }}>\r\n      <BottomNavigationAction onClick={() => onClickLocomotion(Profile.driving)}\r\n        icon={<DriveEtaOutlined fontSize={\"small\"} />} about={\"Driving\"} data-testid='btn-driving' />\r\n      <BottomNavigationAction onClick={() => onClickLocomotion(Profile.cycling)}\r\n        icon={<DirectionsBikeOutlined fontSize={\"small\"} />} about={\"Cycling\"} data-testid='btn-cycling' />\r\n      <BottomNavigationAction onClick={() => onClickLocomotion(Profile.walking)}\r\n        icon={<DirectionsWalkOutlined fontSize={\"small\"} />} about={\"Walking\"} data-testid='btn-walking' />\r\n    </BottomNavigation>\r\n  </Wrapper>\r\n}\r\n\r\nexport default memo(LocomotionPicker)","import React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport NavigationBox from \"./NavigationBox\";\r\nimport NavigationDrawer from \"./NavigationDrawer\";\r\nimport { NavigationComponentProps } from \"./interfaces\";\r\nimport { distanceBetweenPoint } from \"../../../services\";\r\nimport LocomotionPicker from \"./LocomotioPicker\";\r\nimport { Route, Step } from \"../../../services/mapbox/interfaces\";\r\nimport { useAppSelector } from \"../../../context/hooks\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { customStyles } from \"../../../styles/theme\";\r\n\r\nconst Wrapper = styled.div`\r\n  top: 20px;\r\n  right: 25px;\r\n  position: absolute;\r\n  z-index: 500;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst ErrorCover = styled.div`\r\n  min-height: 40px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  margin-bottom: 5px;\r\n\r\n  width:250px;\r\n\r\n  @media screen and (max-width:600px){\r\n      width:70px;\r\n  }\r\n`\r\n\r\nconst NavigationComponent: FC<NavigationComponentProps> = ({ location }) => {\r\n    const {dashboardStyle} = customStyles()\r\n\r\n    const { direction } = useAppSelector(state => state.direction)\r\n    const { positionAccuracyThreshold } = useAppSelector(state => state.coordinates)\r\n\r\n    const [currentStep, setCurrentStep] = useState<number>()\r\n\r\n    const [navigation, setNavigation] = useState<Step>();\r\n\r\n    const [drawerFlag, setDrawerFlag] = useState<boolean>(false)\r\n\r\n    const [routes, setRoutes] = useState<Route>()\r\n\r\n    const onClickBox = useCallback(() => {\r\n        setDrawerFlag(!drawerFlag)\r\n    }, [drawerFlag])\r\n\r\n    useEffect(() => {\r\n        if (direction) {\r\n            setRoutes(direction.routes[0])\r\n        }\r\n    }, [direction])\r\n\r\n    useEffect(() => {\r\n        if (direction) {\r\n            direction?.routes[0].legs[0].steps.forEach((step, index) => {\r\n                let distance = 0\r\n                step.geometry.coordinates.forEach((coordinate) => {\r\n                    distance = distanceBetweenPoint(location.lat, location.lng, coordinate[0], coordinate[1])\r\n                    //TODO delete this\r\n                    console.log('DISTANCE IN METERS -> : ', parseInt(distance.toFixed(2)))\r\n\r\n                    //TODO customizable error for current position\r\n                    if (parseInt(distance.toFixed(2)) <= positionAccuracyThreshold!)\r\n                        setCurrentStep(index)\r\n                })\r\n\r\n            })\r\n        }\r\n    }, [direction, direction?.routes, location.lat, location.lng, positionAccuracyThreshold])\r\n\r\n    useEffect(() => {\r\n        if (currentStep !== undefined && direction) {\r\n            setNavigation(direction?.routes[0].legs[0].steps[currentStep])\r\n        }\r\n    }, [currentStep, direction, direction?.routes])\r\n\r\n    return <>\r\n        <Wrapper data-testid='navigation-box'>\r\n            {\r\n                navigation ? <>\r\n                    <NavigationBox navigation={navigation} onClickBox={onClickBox} />\r\n                    <LocomotionPicker />\r\n                </>\r\n                    : <ErrorCover className={dashboardStyle}>\r\n                        <CircularProgress disableShrink style={{ color: \"white\" }} size={25} />\r\n                    </ErrorCover>\r\n\r\n            }\r\n        </Wrapper>\r\n        {\r\n            routes && <NavigationDrawer open={drawerFlag && currentStep !== undefined} onDrawerClose={onClickBox}\r\n                route={routes} currentStep={currentStep} />\r\n        }\r\n    </>\r\n}\r\n\r\nexport default memo(NavigationComponent)","import React, {FC, memo} from \"react\";\r\nimport {Drawer, useTheme} from \"@material-ui/core\";\r\nimport {Close} from \"@material-ui/icons\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {ProductRequestDrawerProps} from \"./interfaces\";\r\n\r\nconst CustomDrawer = styled(Drawer)`\r\n  .MuiPaper-root {\r\n    background-color: ${({theme}) => theme.palette.grayscale.darkGray};\r\n    opacity: 90%;\r\n    max-width: 500px;\r\n    width: 100%;\r\n\r\n    @media screen and (max-width: 450px){\r\n      width: 400px;\r\n    }\r\n\r\n    @media screen and (max-width: 375px){\r\n      width: 310px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProductRequestDrawer: FC<ProductRequestDrawerProps> = ({open, onCloseDrawer}) => {\r\n    const theme = useTheme()\r\n\r\n    return <CustomDrawer anchor={\"left\"} open={open} onClose={onCloseDrawer} theme={theme}>\r\n        <Close fontSize=\"inherit\" onClick={onCloseDrawer}\r\n               style={{\r\n                   color: theme.palette.grayscale.main,\r\n                   marginLeft: '90%',\r\n                   padding: '10px 8px 0 0',\r\n                   cursor: 'pointer'\r\n               }}/>\r\n    </CustomDrawer>\r\n}\r\n\r\nexport default memo(ProductRequestDrawer)","import React, {memo, useCallback, useState} from \"react\";\r\nimport {Menu} from \"@material-ui/icons\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {customStyles} from \"../../../../styles/theme\";\r\nimport ProductRequestDrawer from \"./ProductRequestDrawer\";\r\n\r\n\r\nconst SearchProduct = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  left: 25px;\r\n  top: 25px;\r\n  position: absolute;\r\n  z-index: 500;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ProductRequestResponsive = () => {\r\n    const {dashboardStyle} = customStyles();\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    const onCloseDrawer = useCallback(() => {\r\n        setOpen(!open)\r\n    }, [open])\r\n\r\n    return <SearchProduct className={dashboardStyle} onClick={() => setOpen(!open)} data-testid='product-box-responsive'>\r\n        <Menu fontSize=\"large\"/>\r\n        <ProductRequestDrawer open={open} onCloseDrawer={onCloseDrawer}/>\r\n    </SearchProduct>\r\n}\r\n\r\nexport default memo(ProductRequestResponsive)","import React, {memo} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {customStyles} from \"../../../../styles/theme\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  width: 500px;\r\n  height: 100vh;\r\n  top:0;\r\n  left: 0;\r\n  \r\n  position: absolute;\r\n  z-index: 500;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 8px;\r\n  cursor: pointer;\r\n\r\n  @media screen and (max-width: 1024px){\r\n      width: 450px;\r\n  }\r\n\r\n`;\r\n\r\n\r\nconst ProductRequest = () => {\r\n    const {dashboardStyle} = customStyles()\r\n\r\n    return <Wrapper className={dashboardStyle} data-testid='product-box'>\r\n        testing panel\r\n    </Wrapper>\r\n}\r\n\r\nexport default memo(ProductRequest)","import React, {FC, memo} from \"react\";\r\n\r\nimport ProductRequestResponsive from \"./ProductResquestResponsive\";\r\nimport ProductRequest from \"./ProductRequest\";\r\nimport { useAppSelector } from \"../../../context/hooks\";\r\n\r\n\r\nexport interface ProductRequestProps {\r\n}\r\n\r\nconst ProductComponent: FC<ProductRequestProps> = () => {\r\n    const state = useAppSelector(state => state.map);\r\n\r\n    return state.responsive ? <ProductRequestResponsive/> : <ProductRequest/>\r\n}\r\n\r\nexport default memo(ProductComponent)","import React, {memo, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle, \r\n    Typography,\r\n    useTheme\r\n} from '@material-ui/core';\r\n\r\nimport {useAppSelector} from \"../../../context/hooks\";\r\nimport {ErrorCode} from \"../../../context/slices/notification\";\r\n\r\nconst CustomDialog = styled(Dialog)`\r\n  .MuiPaper-root {\r\n    color: ${({theme}) => theme.palette.error.main};\r\n    background-color: ${({theme}) => theme.palette.grayscale.dark};\r\n    opacity: 90%;\r\n  }\r\n\r\n  .MuiTypography-colorTextSecondary {\r\n    color: ${({theme}) => theme.palette.grayscale.light};\r\n  }\r\n`;\r\n\r\nconst NotificationAlert = () => {\r\n    const {notification, type} = useAppSelector(state => state.error)\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme()\r\n\r\n    const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        window.location.reload()\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (type === ErrorCode.PERMISSION_DENIED) {\r\n            setOpen(true)\r\n        }\r\n    }, [type])\r\n\r\n    return <CustomDialog open={open} onClose={handleClose} theme={theme}\r\n                         aria-labelledby=\"alert-dialog-title\"\r\n                         aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{notification}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n                <Typography variant={\"h6\"}>Oppps! we can't find your location!</Typography>\r\n                <br/>\r\n                <Typography variant={\"subtitle2\"}>Activate your GPS in order to find you current location</Typography>\r\n            </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={handleClose} style={{color: theme.palette.error.main}} autoFocus>\r\n                OK!\r\n            </Button>\r\n        </DialogActions>\r\n    </CustomDialog>\r\n}\r\n\r\nexport default memo(NotificationAlert)","import React, { memo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Fade, FormControl, FormControlLabel, FormGroup, Paper, Popper, Switch, useTheme } from \"@material-ui/core\";\r\nimport { Settings } from '@material-ui/icons/';\r\n\r\nimport { customStyles } from \"../../../../styles/theme\";\r\nimport { useAppDispatch } from \"../../../../context/hooks\";\r\n\r\nconst Wrapper = styled.div`\r\n    margin-bottom:5px;\r\n    padding:5px 5px 2px 6px;\r\n\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CustomPopper = styled(Popper)`\r\n    z-index: 500;\r\n    position: absolute;\r\n    margin-right: 2px;\r\n    background-color: ${({ theme }) => theme.palette.grayscale.darkGray};\r\n\r\n    .MuiPaper-root{\r\n        background-color: unset;\r\n        color: ${({ theme }) => theme.palette.grayscale.light};\r\n        margin: unset;\r\n        padding: 2px;\r\n    }\r\n`;\r\n\r\nconst ConfigurationButton = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { dashboardStyle } = customStyles();\r\n    const theme = useTheme();\r\n\r\n    const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null);\r\n    const [open, setOpen] = useState(false);\r\n    const [gpsAccuracySwitch,setGpsAccuracySwitch] = useState(true)\r\n    const [positionAccuracySwitch,setPositionAccuracySwitch] = useState(true)\r\n\r\n    const onClickHandler = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        setAnchorEl(event.currentTarget)\r\n        setOpen(!open)\r\n    }\r\n\r\n    const onChangeHandler = (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n        if(e.target.name === 'gps-accuracy'){\r\n            setGpsAccuracySwitch(value=>!value)\r\n            dispatch({\r\n                type:'coordinate/updateGpsAccuracy',\r\n                payload:{flag: !gpsAccuracySwitch}\r\n            })\r\n        }\r\n        else{\r\n            setPositionAccuracySwitch(value=>!value)\r\n            dispatch({\r\n                type:'coordinate/positionAccuracy',\r\n                payload:{flag: !positionAccuracySwitch}\r\n            })\r\n        }\r\n        console.log(e.target.name)\r\n    }\r\n\r\n    return <Wrapper data-testid={'configuration-button'} className={dashboardStyle} onClick={onClickHandler}>\r\n        <Settings />\r\n        <CustomPopper open={open} anchorEl={anchorEl} theme={theme} placement='left-end' className={dashboardStyle} transition>\r\n            {({ TransitionProps }) => (\r\n                <Fade {...TransitionProps} timeout={350}>\r\n                    <Paper>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={<Switch checked={gpsAccuracySwitch} onChange={onChangeHandler} name=\"gps-accuracy\"/>}\r\n                                label=\"GPS Accuracy\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Switch checked={positionAccuracySwitch} onChange={onChangeHandler} name=\"position-accuracy\" />}\r\n                                label=\"Position Accuracy\"\r\n                            />\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                    </Paper>\r\n                </Fade>\r\n            )}\r\n        </CustomPopper>\r\n    </Wrapper>\r\n}\r\n\r\nexport default memo(ConfigurationButton)","import {memo} from \"react\";\r\nimport {Add, Remove} from \"@material-ui/icons\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {customStyles} from \"../../../../styles/theme\";\r\nimport {useAppDispatch, useAppSelector} from \"../../../../context/hooks\";\r\n\r\nconst Cover = styled.div`\r\n  width: 20px;\r\n  height: 70px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n\r\n  cursor: pointer;\r\n`\r\n\r\nconst ZoomButton = () => {\r\n    const {dashboardStyle} = customStyles()\r\n    const {zoom} = useAppSelector(state => state.map)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const onChangeZoom = (flag: boolean) => {\r\n        let _zoom = zoom\r\n        if (flag && zoom < 18) {\r\n            ++_zoom\r\n            \r\n        }\r\n        if (!flag && _zoom > 12) {\r\n            --_zoom\r\n        }\r\n        dispatch({type: \"map/changeZoom\", payload: {zoom: _zoom}})\r\n    }\r\n\r\n    return <Cover className={dashboardStyle}>\r\n        <Add data-testid=\"increase-zoom\" onClick={() => onChangeZoom(true)}/>\r\n        <Remove data-testid=\"decrease-zoom\" onClick={() => onChangeZoom(false)}/>\r\n    </Cover>\r\n}\r\n\r\nexport default memo(ZoomButton)","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ConfigurationButton from \"./ConfigurationButton\";\r\n\r\nimport ZoomButton from \"./ZoomButton\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    right: 25px;\r\n    bottom: 100px;\r\n    z-index: 500;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Configuration = () => {\r\n  return <Wrapper data-testid={'configuration-box'}>\r\n    <ConfigurationButton/>\r\n    <ZoomButton />\r\n  </Wrapper>\r\n}\r\n\r\nexport default memo(Configuration)","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport interface MapType {\r\n    zoom: number,\r\n    responsive: boolean,\r\n}\r\n\r\nconst initialState: MapType = {\r\n    zoom: 15,\r\n    responsive: false,\r\n}\r\n\r\nexport const mapSlice = createSlice({\r\n    name: 'map',\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeZoom: (state, action) => {\r\n            state.zoom = action.payload.zoom\r\n        },\r\n        setResponsive: (state, action) => {\r\n            state.responsive = action.payload.responsive\r\n        },\r\n    }\r\n})\r\n\r\n\r\nexport const { changeZoom, setResponsive } = mapSlice.actions\r\n\r\nexport default mapSlice.reducer","import { memo, useCallback, useEffect } from \"react\";\r\n\r\nimport AlertComponent from \"./Alert\";\r\nimport NavigationComponent from \"./Navigation\";\r\nimport ProductRequest from \"./ProductComponent\";\r\nimport NotificationAlert from \"./NotificationAlert\";\r\nimport Configuration from \"./Configuration\";\r\nimport { useAppDispatch, useAppSelector } from \"../../context/hooks\";\r\nimport { ErrorCode } from \"../../context/slices/notification\";\r\nimport { requestDirection } from \"../../context/slices/direction\";\r\nimport { setResponsive } from \"../../context/slices/map\";\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const { configuration } = useAppSelector(state => state.direction)\r\n    const { type } = useAppSelector(state => state.error)\r\n\r\n    // TODO this logic will change, this dispatch is only for test, it most depend on the pending status\r\n    useEffect(() => {\r\n        if (configuration.target && configuration.departure.lat && configuration.departure.lng) {\r\n            dispatch(requestDirection())\r\n        }\r\n    }, [configuration.departure.lat, configuration.departure.lng, configuration.target, configuration.profile, dispatch])\r\n\r\n    const updateDimensions = useCallback(() => {\r\n        const width = window.innerWidth\r\n        if (width <= 600) {\r\n            dispatch(setResponsive({ responsive: true }))\r\n        } else {\r\n            dispatch(setResponsive({ responsive: false }))\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('load', updateDimensions);\r\n        return () =>\r\n            window.removeEventListener('load', updateDimensions);\r\n\r\n    }, [updateDimensions])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', updateDimensions);\r\n        return () =>\r\n            window.removeEventListener('resize', updateDimensions);\r\n\r\n    }, [updateDimensions])\r\n\r\n\r\n    return <>\r\n        <NavigationComponent location={configuration.departure} />\r\n\r\n        <Configuration/>\r\n\r\n        <ProductRequest />\r\n\r\n        {\r\n            type === ErrorCode.PERMISSION_DENIED ? <NotificationAlert /> : <AlertComponent />\r\n        }\r\n\r\n    </>\r\n}\r\n\r\nexport default memo(Dashboard)","import {Place} from \"../../components/Map/interfaces\";\r\nimport {places as listPlaces} from \"../../services/places\";\r\nimport {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\nimport type {RootState} from '../store'\r\n\r\nexport interface DirectionType {\r\n    places: Array<Place>,\r\n}\r\n\r\nconst initialState: DirectionType = {\r\n    places: listPlaces\r\n}\r\n\r\nexport const placesSlice = createSlice({\r\n    name: 'places',\r\n    initialState: initialState,\r\n    reducers: {\r\n        addPlace: (state, action: PayloadAction<DirectionType>) => {\r\n            return {...action.payload}\r\n        }\r\n    }\r\n})\r\n\r\nexport const {addPlace} = placesSlice.actions\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const getPlaces = (state: RootState) => state.places\r\n\r\nexport default placesSlice.reducer","import {Place} from \"../components/Map/interfaces\";\r\n\r\nexport const places: Array<Place> =  [\r\n    {\r\n        coordinate: {\r\n            lat:25.684283415043094,\r\n            lng:-80.41913012972027\r\n        },\r\n        name: \"Publix Super Market at Higate Square\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.672061446129067,\r\n            lng: -80.4312322559634\r\n        },\r\n        name: \"Fresco y Más\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.683939172142516,\r\n            lng: -80.43275405895899\r\n        },\r\n        name: \"Festival Supermarket\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.714857552456085,\r\n            lng: -80.39435588386571\r\n        },\r\n        name: \"El Ranchito Marketplace\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.713024753573123,\r\n            lng: -80.4330950291638\r\n        },\r\n        name: \"Presidente Supermarket\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.715601288890685,\r\n            lng: -80.43029425388335\r\n        },\r\n        name: \"Sedano's Supermarket\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.69125971191103,\r\n            lng: -80.3877791296447\r\n        },\r\n        name: \"Publix Super Market at Kendall Town & Country\"\r\n    },\r\n    {\r\n        coordinate: {\r\n            lat: 25.68687493692666,\r\n            lng: -80.40242022778254\r\n        },\r\n        name: \"Puerto Madero Miami\"\r\n    }\r\n]","import React, {FC, memo} from \"react\";\r\nimport {Button, TextField, useTheme} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport {ArrowForwardIos} from \"@material-ui/icons\";\r\n\r\nimport {CustomInputParams} from \"./interface\";\r\n\r\nconst Cover = styled.div`\r\n  right: 25px;\r\n  top: 200px;\r\n  width: 260px;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  z-index: 450;\r\n  position: absolute;\r\n\r\n  .MuiInputBase-input {\r\n    color: ${({theme}) => theme.palette.grayscale.dark};\r\n    font-size: large;\r\n  }\r\n\r\n  .MuiFormLabel-root {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .MuiFormLabel-root.Mui-focused {\r\n    color: ${({theme}) => theme.palette.warning.main};\r\n  }\r\n`\r\n\r\nconst CI = styled(TextField)`\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst CustomInput: FC<CustomInputParams> = ({onSetTarget}) => {\r\n    const theme = useTheme()\r\n\r\n    const textFieldHandler = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.preventDefault()\r\n        // @ts-ignore\r\n        let lat = document.getElementById('lat').value;\r\n        // @ts-ignore\r\n        let lng = document.getElementById('lng').value;\r\n\r\n        onSetTarget({lat: lat, lng: lng})\r\n\r\n    }\r\n\r\n    return <Cover theme={theme}>\r\n        <div style={{display: 'flex', flexDirection: 'column'}}>\r\n            <CI id={'lat'} label=\"Latitude\" variant=\"filled\"/>\r\n            <CI id={'lng'} label=\"Longitude\" variant=\"filled\"/>\r\n        </div>\r\n        <Button variant=\"contained\" color=\"default\" startIcon={<ArrowForwardIos/>}\r\n                style={{\r\n                    color: theme.palette.grayscale.light,\r\n                    background: theme.palette.grayscale.dark,\r\n                    opacity: '85%',\r\n                    borderRadius: '0px',\r\n                    padding: '0.5rem',\r\n                    height: '130px',\r\n                    margin: '0 0 1rem 0.5rem',\r\n                    minWidth: '2rem',\r\n                }}\r\n                onClick={textFieldHandler}/>\r\n    </Cover>\r\n\r\n}\r\n\r\nexport default memo(CustomInput)","import { Typography } from \"@material-ui/core\";\r\nimport { LatLngLiteral } from \"leaflet\";\r\nimport { memo, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../context/hooks\";\r\nimport { customStyles } from \"../../styles/theme\";\r\nimport CustomInput from \"./CustomInput\";\r\n\r\nconst CurrentPosition = styled.div`\r\n    bottom: 5%;\r\n    right: 25px;\r\n    position: absolute;\r\n    z-index: 500;\r\n`;\r\n\r\nconst Extras = () => {\r\n    const dispatch = useAppDispatch();\r\n    const {latitude, longitude, accuracy} = useAppSelector(state => state.coordinates)\r\n    const { dashboardStyle } = customStyles()\r\n\r\n    const onSetTarget = useCallback((value: LatLngLiteral) => {\r\n        let param: Array<LatLngLiteral> = []\r\n        if (value.lat && value.lng) {\r\n            param.push(value)\r\n            dispatch({ type: 'direction/setConfiguration', payload: { target: param } })\r\n        }\r\n    }, [dispatch])\r\n\r\n    return <>\r\n            <CurrentPosition className={dashboardStyle}>\r\n                <Typography variant={'subtitle2'} >\r\n                    lat: {latitude} / lng: {longitude} / accuracy: {accuracy}\r\n                </Typography>\r\n            </CurrentPosition>\r\n    \r\n        <CustomInput onSetTarget={onSetTarget} />\r\n    </>\r\n}\r\n\r\nexport default memo(Extras)","import React, { Suspense, useEffect } from \"react\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nimport { useGetCurrentLocation } from \"./services\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport { getPlaces } from \"./context/slices/places\";\r\nimport { useAppSelector } from \"./context/hooks\";\r\nimport Extras from \"./components/Extras\";\r\n\r\nfunction App() {\r\n\r\n    const MapComponent = React.lazy(() => import('./components/Map'))\r\n\r\n    const GPSConfiguration = {\r\n        options: {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,//6000, //* milliseconds / 6 seconds\r\n            maximumAge: 6000//60000, //* milliseconds / 60 seconds - 1 minutes\r\n        },\r\n    }\r\n\r\n    const cancelLocationWatch = useGetCurrentLocation(GPSConfiguration.options)\r\n    //TODO temporary data, t will come from the API\r\n    const { places } = useAppSelector(getPlaces)\r\n    const { configuration } = useAppSelector(state => state.direction)\r\n\r\n    useEffect(() => {\r\n        if (!configuration.departure.lat && !configuration.departure.lng) return;\r\n\r\n        setTimeout(() => {\r\n            cancelLocationWatch()!;\r\n        }, 1000);\r\n\r\n    }, [cancelLocationWatch, configuration.departure.lat, configuration.departure.lng]);\r\n\r\n    return <>\r\n        <div className=\"App\">\r\n            <Dashboard />\r\n            <Suspense fallback={<LinearProgress />}  >\r\n                <MapComponent places={places} />\r\n            </Suspense>\r\n            <Extras />\r\n            <div id='app-notification' data-testid='app-notification'></div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default App;\r\n","import {createGlobalStyle} from 'styled-components';\r\nimport {theme} from './theme'\r\n\r\nconst AppStyle = createGlobalStyle`\r\n  .leaflet-div-icon {\r\n    background: transparent;\r\n    border: none;\r\n  }\r\n\r\n  .MuiBottomNavigation-root{\r\n    background-color: ${theme.palette.grayscale.dark};\r\n  }\r\n`;\r\n\r\n\r\nexport default AppStyle","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nimport {placesSlice} from './slices/places'\r\nimport {mapSlice} from './slices/map'\r\nimport {directionSlice} from \"./slices/direction\";\r\nimport {notificationSlice} from \"./slices/notification\";\r\nimport {coordinateSlice} from \"./slices/coordinate\";\r\n\r\nconst reducer = combineReducers({\r\n    places: placesSlice.reducer,\r\n    map: mapSlice.reducer,\r\n    direction: directionSlice.reducer,\r\n    error: notificationSlice.reducer,\r\n    coordinates: coordinateSlice.reducer,\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: reducer,\r\n    devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type DispatchState = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport 'fontsource-roboto';\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nimport App from './App';\r\nimport {theme} from './styles/theme';\r\nimport AppStyle from './styles/appStyle';\r\nimport {store} from \"./context/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ThemeProvider theme={theme}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n            <AppStyle/>\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}